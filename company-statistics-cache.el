(setq company-statistics--scores #s(hash-table size 400 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("bool" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) (rust-mode . 1) (nil . 1)) "package-install" (((:file "/home/linguini/.emacs.d/packages.el") . 1)) "vector_ret" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) (rust-mode . 1) (nil . 1)) "usize" (((:keyword "fn") . 1)) "rainbow" ((emacs-lisp-mode . 1) (nil . 1)) "Equal" (((:symbol "Ordering") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:symbol "secret_number") . 1) ((:keyword "match") . 1) (rust-mode . 1) (nil . 1)) "TIMES" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:keyword "mut") . 2) (rust-mode . 2) (nil . 2)) "Ordering" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:symbol "cmp") . 1) ((:keyword "match") . 1) (rust-mode . 1) (nil . 1)) "print!" (((:keyword "in") . 1)) "nth_fibo" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) (rust-mode . 1) (nil . 1)) "nth" ((nil . 1)) "println!" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) (rust-mode . 1) (nil . 1)) "lambda" (((:file "/home/linguini/.emacs.d/init.el") . 1) (emacs-lisp-mode . 1)) "delete" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2) ((:symbol "num") . 1) ((:keyword "case") . 1) (nim-mode . 2) (nil . 2) ((:symbol "i") . 1) ((:keyword "else") . 1)) "digitsSum" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2) ((:keyword "proc") . 1) (nim-mode . 2) (nil . 2) ((:keyword "else") . 1)) "prime" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) (rust-mode . 1) (nil . 1)) "setq-default" ((emacs-lisp-mode . 1) (nil . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "defvar") . 1)) "all-the-icons-ivy-setup" (((:file "/home/linguini/.emacs.d/init.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "vector" (((:keyword "match") . 1) ((:keyword "in") . 1)) "dark" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "sp-with-modes") . 1) (emacs-lisp-mode . 1) (nil . 1)) "array" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1) ((:keyword "var") . 1) (nim-mode . 1) (nil . 1)) "system" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1) ((:keyword "var") . 1) (nim-mode . 1) (nil . 1)) "new_vec" (((:keyword "match") . 1)) "input2" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2) ((:keyword "var") . 2) (nim-mode . 2) (nil . 2)) "push" (((:symbol "vector") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "if") . 1) (rust-mode . 1) (nil . 1)) "match" (((:keyword "continue") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "loop") . 1) (rust-mode . 1) (nil . 1)) "count" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1) ((:keyword "if") . 2) (nim-mode . 1) (nil . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) (rust-mode . 1)) "vector_naxt" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "vmode" (((:file "/home/linguini/.Xmodmap") . 1) (fundamental-mode . 1) (nil . 1)) "number_vec" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "println" (((:keyword "match") . 1) ((:keyword "doc") . 1) ((:keyword "if") . -4)) "vector_next" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:keyword "in") . 1) (rust-mode . 1) (nil . 1)) "continue" ((nil . 6) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 5) (nim-mode . 5) ((:keyword "case") . 3) ((:keyword "if") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "match") . 1) (rust-mode . 1)) "Peripherals" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 8) ((:symbol "rtfm") . 1) ((:keyword "let") . 2) (rust-mode . 8) (nil . 8) ((:symbol "hal") . 1) ((:keyword "mut") . 3) ((:symbol "p") . 1) ((:symbol "Interrupt") . 2) ((:keyword "use") . 2) ((:symbol "gpioa") . 1) ((:symbol "peripherals") . 1) ((:keyword "const") . 1)) "primes" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) (rust-mode . 1) (nil . 1)) "set-face-attribute" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "linum-light" (((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) "exti0" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:symbol "Interrupt") . 1) ((:keyword "fn") . 1) (rust-mode . 2) (nil . 2) ((:keyword "mut") . 1)) "init" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3) ((:keyword "mut") . 2) (rust-mode . 3) (nil . 3) ((:symbol "nil") . 1) ((:keyword "fn") . 1)) "reset_clock_ctrl" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "highlight-indent-guides" (((:file "/home/linguini/.emacs.d/init.el") . 1)) "el-get-bundle" (((:keyword "el-get-bundle") . 1) ((:file "/home/linguini/.emacs.d/packages.el") . 1) ((:keyword "defvar") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/.emacs.d/packages.el" (((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) ":company-require-match" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq-local") . 1) (emacs-lisp-mode . 1) (nil . 1)) "macro" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 4) ((:symbol "app") . 1) ((:keyword "use") . 3) (rust-mode . 4) (nil . 4) ((:symbol "cortex_m") . 1)) "Output" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "mut") . 1) (rust-mode . 1) (nil . 1)) "rainbow-indent-highlighter-count" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "display" (((:keyword "if") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "hal" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3) ((:keyword "use") . 2) (rust-mode . 3) (nil . 3) ((:keyword "mut") . 1)) "prelude" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:symbol "hal") . 1) ((:keyword "use") . 1) (rust-mode . 1) (nil . 1)) "task" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:symbol "Peripherals") . 1) ((:keyword "mut") . 1) (rust-mode . 1) (nil . 1)) "accumulator" (((:file "/home/linguini/Desktop/clojure/お試し/src/お試し/core.clj") . 1) (clojure-mode . 1) (nil . 1)) "take" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3) ((:symbol "Peripherals") . 2) ((:keyword "mut") . 1) (rust-mode . 3) (nil . 3) ((:keyword "let") . 2) ((:symbol "CorePeripherals") . 1)) "nth-fibo" (((:keyword "recur") . 1)) "number" (((:keyword "if") . 1)) "recur" (((:keyword "let") . 1) ((:keyword "else") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) (rust-mode . 1)) "fibo1" (((:keyword "recur") . 1)) "fibo2" (((:file "/home/linguini/Desktop/clojure/お試し/src/お試し/core.clj") . 1) (clojure-mode . 1) (nil . 1)) "peripherals" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 7) ((:keyword "mut") . 4) (rust-mode . 7) (nil . 7) ((:keyword "let") . 2) ((:keyword "loop") . 1)) "gpioa" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:keyword "mut") . 1) (rust-mode . 2) (nil . 2) ((:symbol "gpio") . 1) ((:keyword "let") . 1)) "fibo-atom" (((:file "/home/linguini/Desktop/clojure/お試し/src/お試し/core.clj") . 1) ((:keyword "if") . 1) (clojure-mode . 1) (nil . 1)) "line" ((cider-repl-mode . 1) (nil . 1)) "l_on" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:symbol "spawn") . 1) ((:keyword "fn") . 1) (rust-mode . 1) (nil . 1)) "case" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 6) (nim-mode . 6) (nil . 8) ((:keyword "in") . 8) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:keyword "match") . 2) (rust-mode . 2)) "foreground" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "ignore-errors") . 1) (emacs-lisp-mode . 1) (snippet-mode . 1)) "start" ((emacs-lisp-mode . 1) (nil . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "lambda") . 1)) "false" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1) (nim-mode . 1) (nil . 1)) "block" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "loop") . 1) (rust-mode . 1) (nil . 1)) "GPIOA" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:symbol "peripherals") . 1) ((:keyword "mut") . 1) (rust-mode . 1) (nil . 1)) "Timer" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "mut") . 1) (rust-mode . 1) (nil . 1)) "linum" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "pa5_out" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 8) ((:keyword "mut") . 6) (rust-mode . 8) (nil . 8) ((:keyword "match") . 2) ((:symbol "pa5_out") . 1)) "global-prettify-symbols-mode" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "push") . 1) (emacs-lisp-mode . 1) (nil . 1)) "Core" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:symbol "SystClkSource") . 1) ((:keyword "loop") . 1) (rust-mode . 1) (nil . 1)) "clock" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:symbol "SystClkSource") . 1) ((:keyword "loop") . 1) (rust-mode . 1) (nil . 1)) "echo" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 4) (nim-mode . 4) (nil . 4) ((:keyword "in") . 2) ((:keyword "else") . 1) ((:keyword "var") . 1)) "pcre2el" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:symbol "GPIOA") . 1) ((:keyword "mut") . 1) (rust-mode . 2) (nil . 2) ((:symbol "nil") . 1) ((:keyword "let") . 1)) "pa5" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "mut") . 1) (rust-mode . 1) (nil . 1)) "syst" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 6) ((:symbol "peripherals") . 2) ((:keyword "loop") . 1) (rust-mode . 6) (nil . 6) ((:keyword "let") . 2) ((:keyword "match") . 1) ((:symbol "Timer") . 1) ((:keyword "mut") . 2)) "LED_ON" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "loop") . 1) (rust-mode . 1) (nil . 1)) "right" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "device" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "use") . 1) (rust-mode . 1) (nil . 1)) "list" ((Custom-mode . 1) (nil . 1)) "packages" ((Custom-mode . 1) (nil . 1)) "require" (((:file "/home/linguini/.emacs.d/init.el") . 2) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "require") . 2)) "cortex_m_rtfm_macros" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "crate") . 1) (rust-mode . 1) (nil . 1)) "primeBool" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1) ((:symbol "i") . 1) ((:keyword "if") . 1) (nim-mode . 1) (nil . 1)) ":foreground" (((:keyword "ignore-errors") . 1) ((:keyword "set-face-attribute!") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "highlight-indent-guides-top-character-face" ((emacs-lisp-mode . 1) (nil . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "defvar") . 1)) "global-map" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "if") . 1) (emacs-lisp-mode . 1) (nil . 1)) "general" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "if") . 1) (emacs-lisp-mode . 1) (nil . 1)) "main" (((:symbol "main") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "fn") . 1) (rust-mode . 1) (nil . 1)) "enable" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:symbol "SYST") . 1) ((:keyword "loop") . 1) (rust-mode . 1) (nil . 1)) "world" ((nil . 1)) ":weight" (((:keyword "let") . 1) ((:keyword "deftheme") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ":background" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 2) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "ignore-errors") . 1)) ":inherit" ((emacs-lisp-mode . 1) (nil . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark3.el") . 1) ((:keyword "let") . 2) ((:keyword "deftheme") . 1) ((:keyword "ignore-errors") . 1)) "printf" (((:file "/home/linguini/Desktop/C/お試し/main.c") . 1) (c-mode . 1) (nil . 1)) "hl-stipple" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "FLASH" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:symbol "peripherals") . 1) ((:keyword "mut") . 1) (rust-mode . 1) (nil . 1)) ":stipple" ((emacs-lisp-mode . 1) (nil . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark3.el") . 1) ((:keyword "let") . 2)) "c-mode-common-hook" (((:file "/home/linguini/.emacs.d/init.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "SYST" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:symbol "stm32") . 1) ((:keyword "let") . 1) (rust-mode . 2) (nil . 2) ((:symbol "coreperipherals") . 1) ((:keyword "mut") . 1)) "save-buffer" (((:keyword "interactive") . 2) ((:file "/home/linguini/.emacs.d/init.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "clang-format" (((:file "/home/linguini/.emacs.d/init.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "interactive" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "defun") . 1) (emacs-lisp-mode . 1) (nil . 1)) "prettify-symbols-alist" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "push") . 1) (emacs-lisp-mode . 1) (nil . 1)) "cfgr" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:symbol "reset_clock_ctrl") . 2) ((:keyword "let") . 2) (rust-mode . 2) (nil . 2)) "stdio" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:keyword "use") . 1) (rust-mode . 1) (nil . 1)) "CorePeripherals" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:keyword "let") . 2) (rust-mode . 2) (nil . 2)) "let" (((:keyword "let") . 4) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) (rust-mode . 9) (nil . 9) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 8) ((:keyword "mut") . 3) ((:keyword "fn") . 1) ((:keyword "loop") . 1)) "hight" (((:keyword "let") . 1)) "width" (((:keyword "mut") . 1) ((:keyword "struct") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) (rust-mode . 1) (nil . 1)) "wait" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:symbol "timer") . 1) ((:keyword "loop") . 1) (rust-mode . 1) (nil . 1)) "if" ((nil . 7) ((:file "/home/linguini/Desktop/rust/atcoder/src/main.rs") . 1) ((:keyword "else") . 3) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 6) ((:keyword "let") . 2) (nim-mode . 6) ((:keyword "var") . 1) (rust-mode . 1)) "string" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) (rust-mode . 1) (nil . 1)) "from" (((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:symbol "String") . 1) ((:keyword "fn") . 1) (rust-mode . 1) (nil . 1)) "rust-mode-hook" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq-local") . 1) (emacs-lisp-mode . 1) (nil . 1)) "break" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "loop") . 1) (rust-mode . 1) (nil . 1)) "return" ((nil . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1) ((:keyword "if") . 1) (nim-mode . 1)) "sum_range" (((:keyword "fn") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) (rust-mode . 1) (nil . 1)) "hprintln" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3) ((:keyword "loop") . 2) (rust-mode . 3) (nil . 3) ((:keyword "if") . 1)) "for" ((nil . 10) ((:keyword "let") . 2) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 9) ((:keyword "case") . 1) (nim-mode . 9) ((:keyword "var") . 2) ((:keyword "in") . 3) ((:keyword "continue") . 1) ((:keyword "import") . 1)) "maximum" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:keyword "match") . 1) (rust-mode . 1) (nil . 1)) "fringe" (((:keyword "let") . 1) ((:keyword "ignore-errors") . 1)) "mode-line" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "ignore-errors") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark3.el") . 1) ((:keyword "let") . 1)) "extern" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "use") . 1) (rust-mode . 1) (nil . 1)) "part" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:symbol "Peripherals") . 1) ((:keyword "const") . 1) (rust-mode . 1) (nil . 1)) "company-arduino" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq-local") . 1) (emacs-lisp-mode . 1) (nil . 1)) "arduino" (((:file "/home/linguini/.emacs.d/packages.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "output" (((:file "/home/linguini/Arduino/FirstSketch/FirstSketch.ino") . 1) ((:symbol "LED_BUILTIN") . 1) ((:keyword "pinMode") . 1) (arduino-mode . 1) (nil . 1)) "fn" ((rust-mode . 2) (nil . 2) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/atcoder/src/main.rs") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:keyword "loop") . 1) ((:keyword "use") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) "arduino-mode" (((:file "/home/linguini/.emacs.d/packages.el") . 1) ((:keyword "setq") . 2) (emacs-lisp-mode . 2) (nil . 2) ((:file "/home/linguini/.emacs.d/init.el") . 1)) "red4" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "ignore-errors") . 1) (emacs-lisp-mode . 1) (nil . 1)) "width1" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "white-1" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1) (nil . 1)) "index" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1) ((:keyword "case") . 1) (nim-mode . 1) (nil . 1)) "height" (((:keyword "struct") . 1) ((:symbol "other") . 1)) "Rectangle" (((:symbol "other") . 1) ((:keyword "self") . 1) ((:keyword "fn") . 1)) "exwm-enable" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "input1" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2) ((:keyword "var") . 2) (nim-mode . 2) (nil . 2) ((:symbol "M") . 1)) "self" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) (rust-mode . 1) (nil . 1)) "while" (((:file "/home/linguini/Desktop/rust/atcoder/src/main.rs") . 1) ((:keyword "fn") . 1) (rust-mode . 1) (nil . 1)) "num" (((:file "/home/linguini/Desktop/rust/atcoder/src/main.rs") . 2) ((:keyword "if") . 1) (rust-mode . 2) (nil . 2) ((:keyword "else") . 1)) "1057" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1) ((:symbol "num") . 1) ((:keyword "if") . 1) (nim-mode . 1) (nil . 1)) "blue-1" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark3.el") . 1) ((:keyword "if") . 1) (emacs-lisp-mode . 1) (nil . 1)) "split" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1) ((:symbol "nil") . 1) ((:keyword "var") . 1) (nim-mode . 1) (nil . 4) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3) ((:symbol "GPIOD") . 1) ((:keyword "mut") . 3) (rust-mode . 3) ((:symbol "GPIOA") . 2)) "undo-tree-visualizer-show-diff" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "black-1" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "japanese-fonts" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "divider" (((:symbol "number") . 1) ((:keyword "match") . 1)) "is_it_prime" (((:keyword "true") . 1) ((:keyword "if") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) (rust-mode . 1) (nil . 1)) "else" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) (rust-mode . 2) (nil . 3) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1) ((:keyword "case") . 1) (nim-mode . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "if") . 1)) "green-02" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1) (nil . 1)) "fnr" (((:file "/home/linguini/Desktop/rust/atcoder/src/main.rs") . 1) ((:keyword "mut") . 2) (rust-mode . 4) (nil . 4) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3) ((:keyword "fn") . 1) ((:keyword "loop") . 1)) "x0020" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "idle" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:keyword "fn") . 2) (rust-mode . 2) (nil . 2)) "linum-dark" (((:keyword "let") . 1) ((:keyword "quote") . 1) ((:keyword "ignore-errors") . 1)) "secret_number" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:keyword "match") . 1) (rust-mode . 1) (nil . 1)) "stm32f4" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:keyword "use") . 2) (rust-mode . 2) (nil . 2) ((:symbol "stm32f4") . 1)) "unwrap" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 6) ((:symbol "nil") . 5) ((:keyword "else") . 1) (rust-mode . 6) (nil . 6) ((:keyword "mut") . 1) ((:keyword "let") . 3) ((:keyword "loop") . 1)) "use" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 7) ((:keyword "as") . 3) (rust-mode . 7) (nil . 7) ((:keyword "use") . 2) ((:keyword "crate") . 2)) "std" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:keyword "match") . 1) (rust-mode . 1) (nil . 1)) "~/.emacs.d/themes/my-moe-dark.el" (((:file "/home/linguini/.emacs.d/init.el") . 1) (emacs-lisp-mode . 1) (nil . 1)) "set_high" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3) ((:symbol "pa5_out") . 2) ((:keyword "match") . 2) (rust-mode . 3) (nil . 3) ((:symbol "pd4_out") . 1) ((:keyword "loop") . 1)) "constrain" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3) ((:symbol "FLASH") . 1) ((:keyword "mut") . 1) (rust-mode . 3) (nil . 3) ((:symbol "RCC") . 1) ((:keyword "let") . 1) ((:keyword "const") . 1)) "local" (((:file "/home/linguini/Desktop/rust/nucleo-64/.cargo/config") . 1) (conf-unix-mode . 1) (nil . 1)) "app" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:symbol "app") . 1) ((:keyword "else") . 1) (rust-mode . 2) (nil . 2) ((:symbol "cortex_m_rtfm_macros") . 1) ((:keyword "use") . 1)) "resources=" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "loop") . 1) (rust-mode . 1) (nil . 1)) ":type" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "defcustom") . 1) (emacs-lisp-mode . 1) (nil . 1)) "stm32f4xx_hal" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3) ((:keyword "as") . 1) (rust-mode . 3) (nil . 3) ((:keyword "use") . 2)) "cortex_m_semihosting" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "use") . 1) (rust-mode . 1) (nil . 1)) "cortex_m_rt" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 6) ((:keyword "use") . 6) (rust-mode . 6) (nil . 6)) "responsive" (((:keyword "if") . 1)) "year" ((text-mode . 1) (nil . 1)) "stm32" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 8) ((:symbol "stm32f4xx_hal") . 3) ((:keyword "use") . 6) (rust-mode . 8) (nil . 8) ((:symbol "prelude") . 1) ((:keyword "mut") . 1) ((:symbol "hal") . 2) ((:keyword "let") . 1) ((:symbol "device=stm32f4xx_hal") . 1)) "ignore-errors" ((emacs-lisp-mode . 2) (nil . 3) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 2) ((:keyword "set-face-attribute!") . 2) (lisp-interaction-mode . 1) ((:keyword "setq") . 1) ((:keyword "sp-with-modes") . 1)) "letm" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3) ((:keyword "let") . 1) (rust-mode . 3) (nil . 3) ((:keyword "mut") . 2)) "bef1" (((:file "/home/linguini/Desktop/clojure/お試し/src/お試し/core.clj") . 1) ((:keyword "fn") . 1) (clojure-mode . 1) (nil . 1)) "rainbow-delimiters-max-face-count" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "if") . 1) (emacs-lisp-mode . 1) (nil . 1)) "PushPull" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "mut") . 1) (rust-mode . 1) (nil . 1)) "proc" (((:keyword "else") . 1) ((:keyword "var") . 1) (snippet-mode . 1)) "readline" (((:keyword "doc") . 1) (cider-repl-mode . 1) (nil . 1)) "clocks" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:keyword "mut") . 2) (rust-mode . 2) (nil . 2) ((:symbol "nil") . 1)) "timer" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "loop") . 1) (rust-mode . 1) (nil . 1)) "add-hook" (((:file "/home/linguini/.emacs.d/init.el") . 2) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "setq-local") . 1) ((:keyword "setq") . 1)) "my-rust-mode-company-init" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq-local") . 1) (emacs-lisp-mode . 1) (nil . 1)) "setq" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "set_low" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:symbol "pd4_out") . 1) ((:keyword "loop") . 1) (rust-mode . 1) (nil . 1)) "pd4_out" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:keyword "loop") . 2) (rust-mode . 2) (nil . 2)) "diff-hl-mode" (((:keyword "setq") . 2) ((:keyword "require") . 1)) "black-5" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) (emacs-lisp-mode . 1) (nil . 1) ((:keyword "let") . 1)) "10000" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:keyword "fn") . 1) (rust-mode . 1) (nil . 1)) "black-2-5" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "ignore-errors") . 1) (emacs-lisp-mode . 1) (nil . 1)) "pb5_out" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3) ((:symbol "pa5_out") . 2) ((:keyword "mut") . 3) (rust-mode . 3) (nil . 3) ((:symbol "pb5_out") . 1)) "previous" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:symbol "nil") . 1) ((:keyword "if") . 1) (rust-mode . 2) (nil . 2) ((:keyword "else") . 1)) "gpio" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:keyword "use") . 1) (rust-mode . 2) (nil . 2) ((:keyword "let") . 1)) "orange-2" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) (emacs-lisp-mode . 1) (nil . 1) ((:keyword "let") . 1)) "pc13_in" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 5) ((:keyword "if") . 1) (rust-mode . 5) (nil . 5) ((:keyword "loop") . 1) ((:keyword "let") . 2) ((:keyword "mut") . 1)) "previous=0" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "if") . 1) (rust-mode . 1) (nil . 1)) "company-mode" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq-local") . 1) (emacs-lisp-mode . 1) (nil . 1)) "pins" (((:file "/home/linguini/Arduino/FirstSketch/FirstSketch.ino") . 4) (arduino-mode . 4) (nil . 4)) "white-0" (((:keyword "ignore-errors") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1) (nil . 1)) "blue-0" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "ignore-errors") . 1) (emacs-lisp-mode . 1) (nil . 1)) "orange-3" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "ignore-errors") . 1) (emacs-lisp-mode . 1) (nil . 1)) "shell-command-to-string" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/.screenlayout/" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/.screenlayout/default.sh" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "centered-cursor" (((:file "/home/linguini/.emacs.d/packages.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "exwm" (((:file "/home/linguini/.emacs.d/init.el") . 2) ((:keyword "setq") . 2) (emacs-lisp-mode . 2) (nil . 2)) "exwm-randr" (((:file "/home/linguini/.emacs.d/init.el") . 3) ((:keyword "require") . 1) (emacs-lisp-mode . 3) (nil . 3) ((:keyword "setq") . 2)) "black-4" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "ignore-errors") . 1) (emacs-lisp-mode . 1) (nil . 1)) "highlight" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark3.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1) (nil . 1)) "attribute" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "defmacro") . 1) (emacs-lisp-mode . 1) (nil . 1)) "defvar-local" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "deftheme") . 1) (emacs-lisp-mode . 1) (nil . 1)) "defvar" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 2) ((:keyword "progn") . 2) (emacs-lisp-mode . 2) (nil . 2)) "highlight-indent-guides-character" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "defvar") . 1) (emacs-lisp-mode . 1) (nil . 1)) "accm" (((:file "/home/linguini/Desktop/rust/atcoder/src/main.rs") . 3) ((:keyword "if") . 1) (rust-mode . 3) (nil . 3) ((:keyword "else") . 2)) "digit_sum" (((:file "/home/linguini/Desktop/rust/atcoder/src/main.rs") . 1) ((:keyword "else") . 1) (rust-mode . 1) (nil . 1)) "global-undo-tree-mode" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "diff-hl-margin-mode" (((:file "/home/linguini/.emacs.d/init.el") . 2) ((:keyword "setq") . 2) (emacs-lisp-mode . 2) (nil . 2)) "git-gutter+" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "git-gutter+-add-local-hooks" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "git-gutter-fr+-minimal" (((:file "/home/linguini/.emacs.d/init.el") . 2) ((:keyword "lambda") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "setq") . 1)) "git-gutter-fr+-deleted" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "fringe-helper-define") . 1) (emacs-lisp-mode . 1) (nil . 1)) "git-gutter-fr+-added" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "fringe-helper-define") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq") . 1)) "green-0" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 2) ((:keyword "let") . 2) (emacs-lisp-mode . 2) (nil . 2)) "red-0" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1) (nil . 1)) "yellow-0" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 2) ((:keyword "let") . 2) (emacs-lisp-mode . 2) (nil . 2)) "yellow-3-5" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 2) ((:keyword "let") . 2) (emacs-lisp-mode . 2) (nil . 2)) "orange-000" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1) (nil . 1)) ":bold" (((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1) ((:keyword "let") . 1) (emacs-lisp-mode . 1) (nil . 1)) "git-gutter-fr+-view-diff-info" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "exwm-randr-refresh" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "exwm-restart" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "ignore-errors") . 1) (emacs-lisp-mode . 1) (nil . 1)) "int" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1) ((:symbol "A") . 1) ((:keyword "var") . 1) (nim-mode . 1) (nil . 1)) "input" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2) ((:keyword "in") . 2) (nim-mode . 2) (nil . 2)) "pairs" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 5) ((:symbol "input") . 1) ((:keyword "in") . 5) (nim-mode . 5) (nil . 5) ((:symbol "i") . 1) ((:symbol "inputRest") . 1) ((:symbol "count") . 2)) "var" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1) ((:keyword "let") . 1) (nim-mode . 1) (nil . 1)) "stdin" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1) ((:keyword "var") . 1) (nim-mode . 1) (nil . 1)) "nOrM" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2) ((:symbol "nil") . 1) ((:keyword "case") . 2) (nim-mode . 2) (nil . 2) ((:symbol "M") . 1)) "parseint" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2) ((:symbol "nil") . 2) ((:keyword "var") . 1) (nim-mode . 2) (nil . 2) ((:keyword "in") . 1)) "inputRest" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2) ((:keyword "in") . 2) (nim-mode . 2) (nil . 2)) "results" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1) ((:keyword "if") . 1) (nim-mode . 1) (nil . 1)) "answer" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2) ((:keyword "if") . 2) (nim-mode . 2) (nil . 2)) "elements" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 4) ((:keyword "else") . 3) (nim-mode . 4) (nil . 4) ((:keyword "if") . 1)) "result" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1) ((:symbol "nil") . 1) ((:keyword "in") . 1) (nim-mode . 1) (nil . 1)) "monst1" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 3) ((:keyword "else") . 2) (nim-mode . 3) (nil . 3) ((:keyword "if") . 1)) "reverse" (((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2) ((:symbol "nil") . 1) ((:keyword "var") . 2) (nim-mode . 2) (nil . 2) ((:symbol "input2") . 1)) "static" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 8) ((:keyword "fn") . 3) (rust-mode . 8) (nil . 8) ((:keyword "mut") . 4) ((:keyword "const") . 1)) "mut" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "static") . 1) (rust-mode . 1) (nil . 1)) "core" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:keyword "let") . 1) (rust-mode . 2) (nil . 2) ((:symbol "Peripherals") . 1) ((:keyword "use") . 1)) "rtfm" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:keyword "let") . 1) (rust-mode . 2) (nil . 2) ((:keyword "loop") . 1)) "loop" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 6) ((:keyword "fn") . 4) (rust-mode . 6) (nil . 6) ((:keyword "else") . 1) ((:keyword "break") . 1)) "stm32f401" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:symbol "stm32f4") . 1) ((:keyword "use") . 1) (rust-mode . 1) (nil . 1)) "Interrupt" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "use") . 1) (rust-mode . 1) (nil . 1)) "EXIT0" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:symbol "Interrupt") . 1) ((:keyword "fn") . 1) (rust-mode . 1) (nil . 1)) "uart0" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:keyword "mut") . 1) (rust-mode . 2) (nil . 2) ((:symbol "Interrupt") . 1) ((:keyword "fn") . 1)) "runner" (((:file "/home/linguini/Desktop/rust/nucleo-64/.cargo/config") . 1) (conf-unix-mode . 1) (nil . 1)) "poet" (((:file "/home/linguini/Desktop/rust/nucleo-64/.cargo/config") . 1) (conf-unix-mode . 1) (nil . 1)) "resources" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 4) ((:keyword "const") . 1) (rust-mode . 4) (nil . 4) ((:keyword "mut") . 2) ((:keyword "loop") . 1)) "LateResources" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3) ((:symbol "init") . 2) ((:keyword "mut") . 3) (rust-mode . 3) (nil . 3)) "spawn" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:keyword "mut") . 1) (rust-mode . 2) (nil . 2) ((:keyword "fn") . 1)) "entry" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1) ((:keyword "use") . 1) (rust-mode . 1) (nil . 1)) "coreperipherals" (((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2) ((:keyword "mut") . 2) (rust-mode . 2) (nil . 2)))) company-statistics--log [("white-1" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("white-0" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "ignore-errors") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("foreground" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "ignore-errors") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) (":background" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "ignore-errors") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("white-0" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "ignore-errors") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) (":inherit" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "ignore-errors") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("mode-line" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "ignore-errors") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("blue-0" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "ignore-errors") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("orange-3" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "ignore-errors") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("shell-command-to-string" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("~/.screenlayout/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("~/.screenlayout/default.sh" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("start" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("centered-cursor" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/packages.el") . 1)) ("exwm" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "setq") . 2) ((:file "/home/linguini/.emacs.d/init.el") . 2)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("exwm-randr" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "require") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 2)) ("exwm-randr" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("exwm" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("exwm-enable" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) (":foreground" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "ignore-errors") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("black-4" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "ignore-errors") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) (":background" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "ignore-errors") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("white-0" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "ignore-errors") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) (":foreground" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "set-face-attribute!") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("ignore-errors" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "set-face-attribute!") . 2) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 2)) ("ignore-errors" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "set-face-attribute!") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("ignore-errors" (nil . 1) (lisp-interaction-mode . 1)) ("attribute" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defmacro") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("defvar-local" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "deftheme") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("defvar" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "progn") . 2) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 2)) ("defvar" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("highlight-indent-guides-top-character-face" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defvar") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("highlight-indent-guides-character" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defvar") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("fn" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/atcoder/src/main.rs") . 1)) ("fnr" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/atcoder/src/main.rs") . 1)) ("while" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:file "/home/linguini/Desktop/rust/atcoder/src/main.rs") . 1)) ("setq-default" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defvar") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("if" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:file "/home/linguini/Desktop/rust/atcoder/src/main.rs") . 1)) ("num" (nil . 2) (rust-mode . 2) ((:keyword "if") . 1) ((:file "/home/linguini/Desktop/rust/atcoder/src/main.rs") . 2)) ("accm" (nil . 3) (rust-mode . 3) ((:keyword "if") . 1) ((:file "/home/linguini/Desktop/rust/atcoder/src/main.rs") . 3)) ("accm" (nil . 1) (rust-mode . 1) ((:keyword "else") . 2) ((:file "/home/linguini/Desktop/rust/atcoder/src/main.rs") . 1)) ("digit_sum" (nil . 1) (rust-mode . 1) ((:keyword "else") . 1) ((:file "/home/linguini/Desktop/rust/atcoder/src/main.rs") . 1)) ("num" (nil . 1) (rust-mode . 1) ((:keyword "else") . 1) ((:file "/home/linguini/Desktop/rust/atcoder/src/main.rs") . 1)) ("accm" (nil . 1) (rust-mode . 1) ((:keyword "else") . 1) ((:file "/home/linguini/Desktop/rust/atcoder/src/main.rs") . 1)) ("proc" (nil . 1) (nim-mode . 1) ((:keyword "else") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("digitsSum" (nil . 2) (nim-mode . 2) ((:keyword "proc") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2)) ("1057" (nil . 1) (nim-mode . 1) ((:keyword "if") . 1) ((:symbol "num") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("return" (nil . 1) (nim-mode . 1) ((:keyword "if") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("digitsSum" (nil . 1) (nim-mode . 1) ((:keyword "else") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) (":inherit" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 2) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark3.el") . 1)) ("mode-line" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark3.el") . 1)) (":stipple" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark3.el") . 1)) ("highlight" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark3.el") . 1)) ("blue-1" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "if") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark3.el") . 1)) ("global-undo-tree-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("undo-tree-visualizer-show-diff" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("black-1" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) (":inherit" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("fringe" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("black-5" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("setq" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("setq" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("diff-hl-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("diff-hl-margin-mode" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "setq") . 2) ((:file "/home/linguini/.emacs.d/init.el") . 2)) ("diff-hl-margin-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("diff-hl-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("diff-hl-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("git-gutter+" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("require" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("git-gutter+-add-local-hooks" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("git-gutter-fr+-minimal" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "lambda") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 2)) ("git-gutter-fr+-deleted" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "fringe-helper-define") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("git-gutter-fr+-added" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "fringe-helper-define") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("green-0" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "let") . 2) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 2)) ("red-0" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("yellow-0" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "let") . 2) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 2)) ("yellow-3-5" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "let") . 2) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 2)) ("yellow-0" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("yellow-3-5" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("orange-000" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) (":weight" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("linum-light" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("linum-dark" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("orange-2" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("green-0" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("green-02" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) (":bold" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("git-gutter-fr+-added" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("git-gutter-fr+-minimal" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("git-gutter-fr+-view-diff-info" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("exwm-randr" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("exwm-randr-refresh" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("ignore-errors" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("exwm-restart" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "ignore-errors") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("if" (nil . 1) (nim-mode . 6) ((:keyword "let") . 2) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 6)) ("if" (nil . 1) (nim-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("int" (nil . 1) (nim-mode . 1) ((:keyword "var") . 1) ((:symbol "A") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("if" (nil . 1) (nim-mode . 1) ((:keyword "var") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("for" (nil . 1) (nim-mode . 1) ((:keyword "var") . 2) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("input" (nil . 2) (nim-mode . 2) ((:keyword "in") . 2) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2)) ("case" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("if" (nil . 1) (nim-mode . 1) ((:keyword "else") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("for" (nil . 1) (nim-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("pairs" (nil . 5) (nim-mode . 5) ((:keyword "in") . 5) ((:symbol "input") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 5)) ("case" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("for" (nil . 1) (nim-mode . 1) ((:keyword "in") . 3) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("case" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("delete" (nil . 2) (nim-mode . 2) ((:keyword "case") . 1) ((:symbol "num") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2)) ("case" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("for" (nil . 1) (nim-mode . 1) ((:keyword "continue") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("var" (nil . 1) (nim-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("stdin" (nil . 1) (nim-mode . 1) ((:keyword "var") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("for" (nil . 1) (nim-mode . 1) ((:keyword "case") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("case" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("index" (nil . 1) (nim-mode . 1) ((:keyword "case") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("nOrM" (nil . 2) (nim-mode . 2) ((:keyword "case") . 2) ((:symbol "nil") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2)) ("nOrM" (nil . 1) (nim-mode . 1) ((:keyword "case") . 1) ((:symbol "M") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("pairs" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:symbol "i") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("else" (nil . 1) (nim-mode . 1) ((:keyword "case") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("delete" (nil . 1) (nim-mode . 1) ((:keyword "else") . 1) ((:symbol "i") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("for" (nil . 1) (nim-mode . 1) ((:keyword "var") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("for" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("split" (nil . 1) (nim-mode . 1) ((:keyword "var") . 1) ((:symbol "nil") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("input" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("proc" (nil . 1) (nim-mode . 1) ((:keyword "var") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("for" (nil . 1) (nim-mode . 1) ((:keyword "import") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("input1" (nil . 2) (nim-mode . 2) ((:keyword "var") . 2) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2)) ("input1" (nil . 1) (nim-mode . 1) ((:keyword "var") . 1) ((:symbol "M") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("parseint" (nil . 2) (nim-mode . 2) ((:keyword "var") . 1) ((:symbol "nil") . 2) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2)) ("echo" (nil . 1) (nim-mode . 1) ((:keyword "in") . 2) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("inputRest" (nil . 2) (nim-mode . 2) ((:keyword "in") . 2) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2)) ("for" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("inputRest" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("pairs" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:symbol "inputRest") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("case" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("continue" (nil . 1) (nim-mode . 1) ((:keyword "case") . 3) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("parseint" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:symbol "nil") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("pairs" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:symbol "count") . 2) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("results" (nil . 1) (nim-mode . 1) ((:keyword "if") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("answer" (nil . 2) (nim-mode . 2) ((:keyword "if") . 2) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2)) ("answer" (nil . 1) (nim-mode . 1) ((:keyword "if") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("elements" (nil . 4) (nim-mode . 4) ((:keyword "else") . 3) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 4)) ("echo" (nil . 1) (nim-mode . 1) ((:keyword "else") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("elements" (nil . 1) (nim-mode . 1) ((:keyword "else") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("elements" (nil . 1) (nim-mode . 1) ((:keyword "else") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("echo" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("pairs" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:symbol "count") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("result" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:symbol "nil") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("echo" (nil . 1) (nim-mode . 1) ((:keyword "var") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("if" (nil . 1) (nim-mode . 1) ((:keyword "else") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("if" (nil . 1) (nim-mode . 1) ((:keyword "else") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("count" (nil . 1) (nim-mode . 1) ((:keyword "if") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("elements" (nil . 1) (nim-mode . 1) ((:keyword "if") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("case" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("case" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("continue" (nil . 1) (nim-mode . 1) ((:keyword "case") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("continue" (nil . 1) (nim-mode . 1) ((:keyword "if") . 2) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("for" (nil . 1) (nim-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("case" (nil . 1) (nim-mode . 1) ((:keyword "in") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("continue" (nil . 1) (nim-mode . 1) ((:keyword "case") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("monst1" (nil . 3) (nim-mode . 3) ((:keyword "else") . 2) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 3)) ("monst1" (nil . 1) (nim-mode . 1) ((:keyword "else") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("input2" (nil . 2) (nim-mode . 2) ((:keyword "var") . 2) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2)) ("system" (nil . 1) (nim-mode . 1) ((:keyword "var") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("array" (nil . 1) (nim-mode . 1) ((:keyword "var") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("reverse" (nil . 2) (nim-mode . 2) ((:keyword "var") . 2) ((:symbol "nil") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 2)) ("input2" (nil . 1) (nim-mode . 1) ((:keyword "var") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("reverse" (nil . 1) (nim-mode . 1) ((:keyword "var") . 1) ((:symbol "input2") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("monst1" (nil . 1) (nim-mode . 1) ((:keyword "if") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("continue" (nil . 1) (nim-mode . 1) ((:keyword "if") . 1) ((:file "/home/linguini/Desktop/nim/playground/src/playground.nim") . 1)) ("static" (nil . 8) (rust-mode . 8) ((:keyword "fn") . 3) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 8)) ("mut" (nil . 1) (rust-mode . 1) ((:keyword "static") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("let" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 3) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 8)) ("core" (nil . 2) (rust-mode . 2) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("rtfm" (nil . 2) (rust-mode . 2) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("Peripherals" (nil . 8) (rust-mode . 8) ((:keyword "let") . 2) ((:symbol "rtfm") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 8)) ("x0020" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("idle" (nil . 2) (rust-mode . 2) ((:keyword "fn") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("fnr" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3)) ("loop" (nil . 6) (rust-mode . 6) ((:keyword "fn") . 4) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 6)) ("fnr" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("loop" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("unwrap" (nil . 6) (rust-mode . 6) ((:keyword "else") . 1) ((:symbol "nil") . 5) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 6)) ("use" (nil . 7) (rust-mode . 7) ((:keyword "as") . 3) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 7)) ("stm32f4" (nil . 2) (rust-mode . 2) ((:keyword "use") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("stm32f4" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:symbol "stm32f4") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("stm32f401" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:symbol "stm32f4") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("Interrupt" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("EXIT0" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:symbol "Interrupt") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("uart0" (nil . 2) (rust-mode . 2) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("uart0" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:symbol "Interrupt") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("exti0" (nil . 2) (rust-mode . 2) ((:keyword "fn") . 1) ((:symbol "Interrupt") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("static" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("TIMES" (nil . 2) (rust-mode . 2) ((:keyword "mut") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("TIMES" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) (":stipple" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/.emacs.d/themes/my-moe-dark-theme.el") . 1)) ("loop" (nil . 1) (rust-mode . 1) ((:keyword "else") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("runner" (nil . 1) (conf-unix-mode . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/.cargo/config") . 1)) ("poet" (nil . 1) (conf-unix-mode . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/.cargo/config") . 1)) ("local" (nil . 1) (conf-unix-mode . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/.cargo/config") . 1)) ("static" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("app" (nil . 2) (rust-mode . 2) ((:keyword "else") . 1) ((:symbol "app") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("resources" (nil . 4) (rust-mode . 4) ((:keyword "const") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 4)) ("exti0" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("resources" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("macro" (nil . 4) (rust-mode . 4) ((:keyword "use") . 3) ((:symbol "app") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 4)) ("use" (nil . 1) (rust-mode . 1) ((:keyword "use") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("cortex_m_semihosting" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("cortex_m_rt" (nil . 6) (rust-mode . 6) ((:keyword "use") . 6) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 6)) ("cortex_m_rt" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("macro" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("stm32f4xx_hal" (nil . 3) (rust-mode . 3) ((:keyword "as") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3)) ("stm32f4xx_hal" (nil . 1) (rust-mode . 1) ((:keyword "use") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("stm32" (nil . 8) (rust-mode . 8) ((:keyword "use") . 6) ((:symbol "stm32f4xx_hal") . 3) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 8)) ("stm32" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:symbol "stm32f4xx_hal") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("fn" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("stm32" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:symbol "stm32f4xx_hal") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("use" (nil . 1) (rust-mode . 1) ((:keyword "as") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("hal" (nil . 3) (rust-mode . 3) ((:keyword "use") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3)) ("prelude" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:symbol "hal") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("static" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 4) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("hal" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("Peripherals" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 3) ((:symbol "hal") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("task" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:symbol "Peripherals") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("take" (nil . 3) (rust-mode . 3) ((:keyword "mut") . 1) ((:symbol "Peripherals") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3)) ("unwrap" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:symbol "nil") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("stm32" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:symbol "prelude") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("stm32" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("Peripherals" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:symbol "p") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("Peripherals" (nil . 1) (rust-mode . 1) ((:keyword "use") . 2) ((:symbol "Interrupt") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("letm" (nil . 3) (rust-mode . 3) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3)) ("split" (nil . 1) (rust-mode . 3) ((:keyword "mut") . 3) ((:symbol "GPIOD") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3)) ("init" (nil . 3) (rust-mode . 3) ((:keyword "mut") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3)) ("LateResources" (nil . 3) (rust-mode . 3) ((:keyword "mut") . 3) ((:symbol "init") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3)) ("resources" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("resources=" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("static" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("static" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("Peripherals" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:symbol "gpioa") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("init" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:symbol "nil") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("init" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("LateResources" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:symbol "init") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("static" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("Output" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("PushPull" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("Peripherals" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:symbol "Interrupt") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("gpioa" (nil . 2) (rust-mode . 2) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("peripherals" (nil . 7) (rust-mode . 7) ((:keyword "mut") . 4) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 7)) ("spawn" (nil . 2) (rust-mode . 2) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("spawn" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("l_on" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:symbol "spawn") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("resources" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("entry" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("fn" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("main" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("loop" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("use" (nil . 1) (rust-mode . 1) ((:keyword "crate") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("cortex_m_rt" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("let" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("Peripherals" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("take" (nil . 1) (rust-mode . 1) ((:keyword "let") . 2) ((:symbol "Peripherals") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("unwrap" (nil . 1) (rust-mode . 1) ((:keyword "let") . 3) ((:symbol "nil") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("peripherals" (nil . 1) (rust-mode . 1) ((:keyword "let") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("peripherals" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("GPIOA" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:symbol "peripherals") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("split" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:symbol "GPIOA") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("pcre2el" (nil . 2) (rust-mode . 2) ((:keyword "mut") . 1) ((:symbol "GPIOA") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("split" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:symbol "GPIOA") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("letm" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("pa5" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("pa5_out" (nil . 8) (rust-mode . 8) ((:keyword "mut") . 6) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 8)) ("device" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("hal" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("stm32" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:symbol "hal") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("fnr" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("idle" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("loop" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("rtfm" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("use" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("cortex_m_rt" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("cortex_m_rt" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("app" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:symbol "cortex_m_rtfm_macros") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("extern" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("cortex_m_rtfm_macros" (nil . 1) (rust-mode . 1) ((:keyword "crate") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("macro" (nil . 1) (rust-mode . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("use" (nil . 1) (rust-mode . 1) ((:keyword "as") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("cortex_m_rt" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("macro" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:symbol "cortex_m") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("stm32f4xx_hal" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("static" (nil . 1) (rust-mode . 1) ((:keyword "const") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("LED_ON" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("peripherals" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("syst" (nil . 6) (rust-mode . 6) ((:keyword "loop") . 1) ((:symbol "peripherals") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 6)) ("clock" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:symbol "SystClkSource") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("Core" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:symbol "SystClkSource") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("enable" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:symbol "SYST") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("syst" (nil . 1) (rust-mode . 1) ((:keyword "let") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("match" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("syst" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("case" (nil . 1) (rust-mode . 2) ((:keyword "match") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("pa5_out" (nil . 1) (rust-mode . 1) ((:keyword "match") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("set_high" (nil . 3) (rust-mode . 3) ((:keyword "match") . 2) ((:symbol "pa5_out") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3)) ("case" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("pa5_out" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("set_high" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "pa5_out") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("syst" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("continue" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("let" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("stm32" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "hal") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("SYST" (nil . 2) (rust-mode . 2) ((:keyword "let") . 1) ((:symbol "stm32") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("pa5_out" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("letm" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("peripherals" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("FLASH" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:symbol "peripherals") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("constrain" (nil . 3) (rust-mode . 3) ((:keyword "mut") . 1) ((:symbol "FLASH") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3)) ("let" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("peripherals" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("constrain" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "RCC") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("let" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("reset_clock_ctrl" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("cfgr" (nil . 2) (rust-mode . 2) ((:keyword "let") . 2) ((:symbol "reset_clock_ctrl") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("cfgr" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "reset_clock_ctrl") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("pcre2el" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "nil") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("let" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("Timer" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("syst" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 2) ((:symbol "Timer") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("peripherals" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("syst" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:symbol "peripherals") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("clocks" (nil . 2) (rust-mode . 2) ((:keyword "mut") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("block" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("timer" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("wait" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:symbol "timer") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("unwrap" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:symbol "nil") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("core" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:symbol "Peripherals") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("use" (nil . 1) (rust-mode . 1) ((:keyword "crate") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("let" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("CorePeripherals" (nil . 2) (rust-mode . 2) ((:keyword "let") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("prettify-symbols-alist" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "push") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("global-prettify-symbols-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "push") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("add-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-local") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("rust-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-local") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) (":company-require-match" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-local") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("my-rust-mode-company-init" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-local") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("coreperipherals" (nil . 2) (rust-mode . 2) ((:keyword "mut") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("CorePeripherals" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("take" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "CorePeripherals") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("unwrap" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("unwrap" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "nil") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("coreperipherals" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("SYST" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:symbol "coreperipherals") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("clocks" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:symbol "nil") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("pd4_out" (nil . 2) (rust-mode . 2) ((:keyword "loop") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("set_low" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:symbol "pd4_out") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("pd4_out" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("set_high" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:symbol "pd4_out") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("break" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("loop" (nil . 1) (rust-mode . 1) ((:keyword "break") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("hprintln" (nil . 3) (rust-mode . 3) ((:keyword "loop") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3)) ("stm32" (nil . 1) (rust-mode . 1) ((:keyword "use") . 1) ((:symbol "device=stm32f4xx_hal") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("constrain" (nil . 1) (rust-mode . 1) ((:keyword "const") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("pa5_out" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("LateResources" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("pa5_out" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("pa5_out" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:symbol "pa5_out") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("pb5_out" (nil . 3) (rust-mode . 3) ((:keyword "mut") . 3) ((:symbol "pa5_out") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 3)) ("pb5_out" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:symbol "pb5_out") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("pa5_out" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("pb5_out" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:symbol "pa5_out") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("gpio" (nil . 2) (rust-mode . 2) ((:keyword "use") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("Peripherals" (nil . 1) (rust-mode . 1) ((:keyword "const") . 1) ((:symbol "peripherals") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("part" (nil . 1) (rust-mode . 1) ((:keyword "const") . 1) ((:symbol "Peripherals") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("pc13_in" (nil . 5) (rust-mode . 5) ((:keyword "if") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 5)) ("hprintln" (nil . 1) (rust-mode . 1) ((:keyword "if") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("push" (nil . 1) (rust-mode . 1) ((:keyword "if") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("count" (nil . 1) (rust-mode . 1) ((:keyword "if") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("previous=0" (nil . 1) (rust-mode . 1) ((:keyword "if") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("previous" (nil . 2) (rust-mode . 2) ((:keyword "if") . 1) ((:symbol "nil") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 2)) ("previous" (nil . 1) (rust-mode . 1) ((:keyword "else") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("else" (nil . 1) (rust-mode . 1) ((:keyword "if") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("hprintln" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("pc13_in" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("let" (nil . 1) (rust-mode . 1) ((:keyword "loop") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("gpio" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("gpioa" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "gpio") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("pc13_in" (nil . 1) (rust-mode . 1) ((:keyword "let") . 2) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("pc13_in" (nil . 1) (rust-mode . 1) ((:keyword "mut") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("pc13_in" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/nucleo-64/src/main.rs") . 1)) ("arduino" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/packages.el") . 1)) ("arduino-mode" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "setq") . 2) ((:file "/home/linguini/.emacs.d/packages.el") . 1)) ("add-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("arduino-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("company-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-local") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("company-arduino" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-local") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("pins" (nil . 4) (arduino-mode . 4) ((:file "/home/linguini/Arduino/FirstSketch/FirstSketch.ino") . 4)) ("pins" (nil . 1) (arduino-mode . 1) ((:file "/home/linguini/Arduino/FirstSketch/FirstSketch.ino") . 1)) ("pins" (nil . 1) (arduino-mode . 1) ((:file "/home/linguini/Arduino/FirstSketch/FirstSketch.ino") . 1)) ("pins" (nil . 1) (arduino-mode . 1) ((:file "/home/linguini/Arduino/FirstSketch/FirstSketch.ino") . 1)) ("output" (nil . 1) (arduino-mode . 1) ((:keyword "pinMode") . 1) ((:symbol "LED_BUILTIN") . 1) ((:file "/home/linguini/Arduino/FirstSketch/FirstSketch.ino") . 1)) ("save-buffer" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1))] company-statistics--index 0)