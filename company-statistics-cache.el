(setq company-statistics--scores #s(hash-table size 400 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("gpaste-client" (((:file "/home/linguini/.xsession") . 1) ((:keyword "fi") . 1) (sh-mode . 1) (nil . 1)) "package-install" (((:file "/home/linguini/.emacs.d/init.el") . 4) ((:keyword "setq") . 1) (emacs-lisp-mode . 8) (nil . 8) ((:keyword "require") . 2) ((:keyword "when") . 1) ((:file "/home/linguini/.emacs.d/packages.el") . 4) ((:keyword "dolist") . 3)) "rand" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 2) ((:keyword "let") . 2) (rust-mode . 2) (nil . 2) ((:symbol "rand") . 1)) "std" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 3) ((:keyword "match") . 3) (rust-mode . 3) (nil . 3)) "cmp" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 5) ((:symbol "std") . 5) ((:keyword "match") . 5) (rust-mode . 5) (nil . 5)) "Ordering" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 8) ((:symbol "cmp") . 6) ((:keyword "match") . 8) (rust-mode . 8) (nil . 8)) "Equal" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 6) ((:symbol "Ordering") . 2) ((:keyword "match") . 6) (rust-mode . 6) (nil . 6) ((:symbol "secret_number") . 4)) "Greater" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 2) ((:symbol "Ordering") . 2) ((:keyword "match") . 2) (rust-mode . 2) (nil . 2)) "Less" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 3) ((:symbol "Ordering") . 3) ((:keyword "match") . 3) (rust-mode . 3) (nil . 3)) "print!" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 3) ((:keyword "in") . 2) (rust-mode . 3) (nil . 3) ((:keyword "fn") . 1)) "nth_fibo" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 2) ((:symbol "nil") . 1) ((:keyword "in") . 1) (rust-mode . 2) (nil . 2) ((:keyword "let") . 1)) "nth" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:keyword "in") . 1) (rust-mode . 1) (nil . 2) ((:keyword "lambda") . 1) (lisp-interaction-mode . 1)) "println!" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 5) ((:keyword "let") . 4) (rust-mode . 5) (nil . 5) ((:keyword "in") . 1) ((:symbol "=") . 1)) "print_fibo" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "-lambda" ((lisp-interaction-mode . 1) (nil . 1)) "lambda" (((:keyword "lambda") . 1) (lisp-interaction-mode . 1) (nil . 1)) "faster_print_fibo" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "col" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:symbol "0") . 1) ((:keyword "in") . 1) (rust-mode . 1) (nil . 1)) "square" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "uimage" ((Custom-mode . 1) (nil . 1)) "desktop-save-mode" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "progn") . 1) (emacs-lisp-mode . 1) (nil . 1)) "nil" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "progn") . 1) (emacs-lisp-mode . 1) (nil . 1)) "setq-default" (((:file "/home/linguini/.emacs.d/init.el") . 2) ((:keyword "require") . 1) (emacs-lisp-mode . 3) (nil . 3) ((:keyword "with-eval-after-load") . 1) ((:file "/home/linguini/.emacs.d/packages.el") . 1) ((:keyword "setq") . 1)) "all-the-icons-ivy-setup" (((:file "/home/linguini/.emacs.d/init.el") . 2) ((:keyword "when") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "require") . 1)) "path" ((Custom-mode . 1) (nil . 1)) "add-to-list" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq-local") . 1) (emacs-lisp-mode . 1) (nil . 1)) "/home/linguini/.emacs.d/elisp/awesome-tray.el" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq-local") . 1) (emacs-lisp-mode . 1) (nil . 1)) "awesome-tray-enable" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "layout-restore" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "layout-save-current" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "wg-save-wconfig" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "require") . 1) (emacs-lisp-mode . 1) (nil . 1)) "counsel-load-theme" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "sp-with-modes") . 1) (emacs-lisp-mode . 1) (nil . 1)) "dark" (((:file "/home/linguini/.emacs.d/init.el") . 2) ((:keyword "sp-with-modes") . 2) (emacs-lisp-mode . 2) (nil . 2)) "themes" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "sp-with-modes") . 1) (emacs-lisp-mode . 1) (nil . 1)) "Rand" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:symbol "rand") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "thread_rng" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:symbol "rand") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "gen_range" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:symbol "nil") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "trim" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:symbol "guess") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "parse" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:symbol "nil") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "match" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 3) ((:keyword "let") . 1) (rust-mode . 3) (nil . 3) ((:keyword "continue") . 2)) "Ok" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "Err" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 3) ((:keyword "let") . 3) (rust-mode . 3) (nil . 3)) "vmode" (((:file "/home/linguini/.Xmodmap") . 4) (fundamental-mode . 4) (nil . 4)) "lock" (((:file "/home/linguini/.Xmodmap") . 1) (fundamental-mode . 1) (nil . 1)) "println" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 7) ((:symbol "=") . 3) ((:keyword "let") . 3) (rust-mode . 7) (nil . 7) ((:keyword "match") . 4)) "please" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:keyword "let") . 1) (rust-mode . 1) (nil . 1)) "continue" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 11) ((:keyword "let") . 11) (rust-mode . 11) (nil . 11)) "guess" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:keyword "match") . 1) (rust-mode . 1) (nil . 1)) "secret_number" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 2) ((:keyword "match") . 2) (rust-mode . 2) (nil . 2)) "equal" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:symbol "secret_number") . 1) ((:keyword "match") . 1) (rust-mode . 1) (nil . 1)) "ordering" (((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1) ((:symbol "cmp") . 1) ((:keyword "match") . 1) (rust-mode . 1) (nil . 1)) "with" (((:symbol "nil") . 1) (Custom-mode . 1) (nil . 1)) "company" ((Custom-mode . 1) (nil . 1)) "yasnippet" ((Custom-mode . 1) (nil . 1)) "./packages.el" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "el-get-bundle" (((:file "/home/linguini/.emacs.d/packages.el") . 4) ((:keyword "el-get-bundle") . 2) (emacs-lisp-mode . 4) (nil . 4) ((:keyword "defvar") . 2)) "~/.emacs.d/packages.el" (((:file "/home/linguini/.emacs.d/init.el") . 2) ((:keyword "setq") . 2) (emacs-lisp-mode . 2) (nil . 2)) "package" (((:file "/home/linguini/.emacs.d/packages.el") . 1) ((:keyword "dolist") . 1) (emacs-lisp-mode . 1) (nil . 1)) "switch-window" (((:file "/home/linguini/.emacs.d/packages.el") . 1) ((:keyword "defvar") . 1) (emacs-lisp-mode . 1) (nil . 1)) "year" ((text-mode . 2) (nil . 2)) ":width-in-millimeters" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "Info-search-whitespace-regexp" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "whitespace-display-mappings" (((:file "/home/linguini/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)))) company-statistics--log [nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil ("gpaste-client" (nil . 1) (sh-mode . 1) ((:keyword "fi") . 1) ((:file "/home/linguini/.xsession") . 1)) ("package-install" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("rand" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("std" (nil . 2) (rust-mode . 2) ((:keyword "match") . 2) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 2)) ("cmp" (nil . 3) (rust-mode . 3) ((:keyword "match") . 3) ((:symbol "std") . 3) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 3)) ("cmp" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "std") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Ordering" (nil . 2) (rust-mode . 2) ((:keyword "match") . 2) ((:symbol "cmp") . 2) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 2)) ("Equal" (nil . 2) (rust-mode . 2) ((:keyword "match") . 2) ((:symbol "Ordering") . 2) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 2)) ("std" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("cmp" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "std") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Ordering" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "cmp") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Greater" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "Ordering") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Equal" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "Ordering") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Less" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "Ordering") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("print!" (nil . 3) (rust-mode . 3) ((:keyword "in") . 2) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 3)) ("nth_fibo" (nil . 2) (rust-mode . 2) ((:keyword "in") . 1) ((:symbol "nil") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 2)) ("nth" (nil . 2) (rust-mode . 1) ((:keyword "in") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("println!" (nil . 4) (rust-mode . 4) ((:keyword "let") . 3) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 4)) ("print_fibo" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("-lambda" (nil . 1) (lisp-interaction-mode . 1)) ("nth" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "lambda") . 1)) ("lambda" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "lambda") . 1)) ("print!" (nil . 1) (rust-mode . 1) ((:keyword "fn") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("faster_print_fibo" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("println!" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("println!" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("nth_fibo" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("col" (nil . 1) (rust-mode . 1) ((:keyword "in") . 1) ((:symbol "0") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("print!" (nil . 1) (rust-mode . 1) ((:keyword "in") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("println!" (nil . 1) (rust-mode . 1) ((:keyword "in") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("square" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("package-install" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("uimage" (nil . 1) (Custom-mode . 1)) ("desktop-save-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("nil" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("setq-default" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("all-the-icons-ivy-setup" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "when") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 2)) ("all-the-icons-ivy-setup" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("package-install" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "when") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("path" (nil . 1) (Custom-mode . 1)) ("add-to-list" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-local") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("/home/linguini/.emacs.d/elisp/awesome-tray.el" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq-local") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("awesome-tray-enable" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("package-install" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("layout-restore" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("layout-save-current" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("wg-save-wconfig" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "require") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("counsel-load-theme" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "sp-with-modes") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("dark" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "sp-with-modes") . 2) ((:file "/home/linguini/.emacs.d/init.el") . 2)) ("dark" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "sp-with-modes") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("themes" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "sp-with-modes") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("rand" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "rand") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Rand" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "rand") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("thread_rng" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "rand") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("gen_range" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "nil") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("trim" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "guess") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("parse" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "nil") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("match" (nil . 3) (rust-mode . 3) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 3)) ("Ok" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Err" (nil . 3) (rust-mode . 3) ((:keyword "let") . 3) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 3)) ("Err" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Err" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("vmode" (nil . 4) (fundamental-mode . 4) ((:file "/home/linguini/.Xmodmap") . 4)) ("vmode" (nil . 1) (fundamental-mode . 1) ((:file "/home/linguini/.Xmodmap") . 1)) ("vmode" (nil . 1) (fundamental-mode . 1) ((:file "/home/linguini/.Xmodmap") . 1)) ("vmode" (nil . 1) (fundamental-mode . 1) ((:file "/home/linguini/.Xmodmap") . 1)) ("lock" (nil . 1) (fundamental-mode . 1) ((:file "/home/linguini/.Xmodmap") . 1)) ("println" (nil . 7) (rust-mode . 7) ((:keyword "let") . 3) ((:symbol "=") . 3) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 7)) ("println!" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "=") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("println" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "=") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("println" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:symbol "=") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("please" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("continue" (nil . 11) (rust-mode . 11) ((:keyword "let") . 11) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 11)) ("continue" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("continue" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("continue" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("continue" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("continue" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("continue" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("continue" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("continue" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("continue" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("continue" (nil . 1) (rust-mode . 1) ((:keyword "let") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("println" (nil . 1) (rust-mode . 1) ((:keyword "match") . 4) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("println" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("guess" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("match" (nil . 1) (rust-mode . 1) ((:keyword "continue") . 2) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("match" (nil . 1) (rust-mode . 1) ((:keyword "continue") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("secret_number" (nil . 2) (rust-mode . 2) ((:keyword "match") . 2) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 2)) ("Equal" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "secret_number") . 4) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("equal" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "secret_number") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Equal" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "secret_number") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Equal" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "secret_number") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Equal" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "secret_number") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Ordering" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "cmp") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Ordering" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "cmp") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("ordering" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "cmp") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Ordering" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("secret_number" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Ordering" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Less" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "Ordering") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("std" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("cmp" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "std") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("cmp" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "std") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Ordering" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "cmp") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Less" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "Ordering") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Ordering" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "cmp") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("Greater" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:symbol "Ordering") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("with" (nil . 1) (Custom-mode . 1) ((:symbol "nil") . 1)) ("company" (nil . 1) (Custom-mode . 1)) ("yasnippet" (nil . 1) (Custom-mode . 1)) ("println" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("println" (nil . 1) (rust-mode . 1) ((:keyword "match") . 1) ((:file "/home/linguini/Desktop/rust/お試し/src/main.rs") . 1)) ("setq-default" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "with-eval-after-load") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("./packages.el" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("el-get-bundle" (nil . 4) (emacs-lisp-mode . 4) ((:keyword "el-get-bundle") . 2) ((:file "/home/linguini/.emacs.d/packages.el") . 4)) ("el-get-bundle" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defvar") . 2) ((:file "/home/linguini/.emacs.d/packages.el") . 1)) ("el-get-bundle" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "el-get-bundle") . 1) ((:file "/home/linguini/.emacs.d/packages.el") . 1)) ("el-get-bundle" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defvar") . 1) ((:file "/home/linguini/.emacs.d/packages.el") . 1)) ("~/.emacs.d/packages.el" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "setq") . 2) ((:file "/home/linguini/.emacs.d/init.el") . 2)) ("package-install" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/linguini/.emacs.d/packages.el") . 4)) ("package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "dolist") . 1) ((:file "/home/linguini/.emacs.d/packages.el") . 1)) ("switch-window" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defvar") . 1) ((:file "/home/linguini/.emacs.d/packages.el") . 1)) ("~/.emacs.d/packages.el" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("package-install" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "dolist") . 3) ((:file "/home/linguini/.emacs.d/packages.el") . 1)) ("package-install" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "dolist") . 1) ((:file "/home/linguini/.emacs.d/packages.el") . 1)) ("package-install" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "dolist") . 1) ((:file "/home/linguini/.emacs.d/packages.el") . 1)) ("setq-default" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/packages.el") . 1)) ("year" (nil . 2) (text-mode . 2)) ("year" (nil . 1) (text-mode . 1)) (":width-in-millimeters" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("Info-search-whitespace-regexp" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1)) ("whitespace-display-mappings" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/linguini/.emacs.d/init.el") . 1))] company-statistics--index 0)