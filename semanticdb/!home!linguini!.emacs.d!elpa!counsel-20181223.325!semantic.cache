;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("swiper" include nil nil [1594 1611])
            ("compile" include nil nil [1612 1630])
            ("dired" include nil nil [1631 1647])
            ("define-obsolete-variable-alias" code nil nil [1661 1750])
            ("define-obsolete-function-alias" code nil nil [1752 1829])
            ("counsel--elisp-to-pcre" function (:arguments ("regex")) nil [1831 2903])
            ("counsel-directory-name" function (:arguments ("dir")) nil [2905 3077])
            ("counsel-string-compose" function (:arguments ("prefix" "str")) nil [3079 3325])
            ("counsel-require-program" function (:arguments ("program")) nil [3327 3607])
            ("counsel-prompt-function-default" function nil nil [3609 3810])
            ("declare-function" code nil nil [3812 3859])
            ("counsel-prompt-function-dir" function nil nil [3861 4321])
            ("counsel--async-time" variable nil nil [4341 4467])
            ("counsel--async-start" variable nil nil [4469 4596])
            ("counsel--async-duration" variable nil nil [4598 4732])
            ("counsel--async-exit-code-plist" variable nil nil [4734 4912])
            ("counsel-set-async-exit-code" function (:arguments ("cmd" "number" "str")) nil [4914 5251])
            ("counsel-async-split-string-re" variable (:default-value "
") nil [5253 5353])
            ("counsel-async-ignore-re" variable nil nil [5355 5460])
            ("counsel--async-command" function (:arguments ("cmd" "sentinel" "filter" "name")) nil [5462 6541])
            ("counsel-grep-last-line" variable nil nil [6543 6578])
            ("counsel--async-sentinel" function (:arguments ("process" "_msg")) nil [6580 8178])
            ("counsel-async-filter-update-time" variable (:default-value 500000) nil [8180 8341])
            ("counsel--async-filter" function (:arguments ("process" "str")) nil [8343 9500])
            ("counsel-delete-process" function (:arguments ("name")) nil [9502 9710])
            ("counsel-el" function (:user-visible-flag t) nil [9769 10730])
            ("add-to-list" code nil nil [10732 10781])
            ("declare-function" code nil nil [10801 10854])
            ("declare-function" code nil nil [10855 10906])
            ("declare-function" code nil nil [10907 10972])
            ("counsel-cl" function (:user-visible-flag t) nil [10989 11373])
            ("declare-function" code nil nil [11395 11443])
            ("declare-function" code nil nil [11444 11500])
            ("declare-function" code nil nil [11501 11553])
            ("counsel-jedi" function (:user-visible-flag t) nil [11555 11901])
            ("counsel--py-action" function (:arguments ("symbol-name")) nil [11903 12420])
            ("declare-function" code nil nil [12441 12506])
            ("counsel--generic" function (:arguments ("completion-fn")) nil [12507 13072])
            ("add-to-list" code nil nil [13074 13129])
            ("counsel-clj" function (:user-visible-flag t) nil [13146 13335])
            ("company-candidates" variable nil nil [13360 13387])
            ("company-point" variable nil nil [13388 13410])
            ("company-common" variable nil nil [13411 13434])
            ("declare-function" code nil nil [13435 13484])
            ("declare-function" code nil nil [13485 13530])
            ("declare-function" code nil nil [13531 13587])
            ("declare-function" code nil nil [13588 13634])
            ("counsel-company" function (:user-visible-flag t) nil [13651 14139])
            ("declare-function" code nil nil [14162 14237])
            ("declare-function" code nil nil [14238 14310])
            ("declare-function" code nil nil [14311 14380])
            ("counsel-irony" function (:user-visible-flag t) nil [14397 14540])
            ("counsel-irony-callback" function
               (:user-visible-flag t
                :arguments ("candidates"))
                nil [14542 15193])
            ("counsel-irony-annotate" function (:arguments ("x")) nil [15195 15350])
            ("add-to-list" code nil nil [15352 15442])
            ("counsel-describe-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map (kbd "C-.") (function counsel-find-symbol)) (define-key map (kbd "C-,") (function counsel--info-lookup-symbol)) map)) nil [15495 15687])
            ("ivy-set-actions" code nil nil [15689 15821])
            ("counsel-describe-symbol-history" variable nil nil [15823 15994])
            ("counsel-find-symbol" function (:user-visible-flag t) nil [15996 16140])
            ("counsel--info-lookup-symbol" function (:user-visible-flag t) nil [16142 16298])
            ("find-tag-marker-ring" variable nil nil [16300 16329])
            ("declare-function" code nil nil [16330 16378])
            ("defalias" code nil nil [16380 16660])
            ("counsel--find-symbol" function (:arguments ("x")) nil [16662 17567])
            ("define-obsolete-function-alias" code nil nil [17569 17658])
            ("counsel--variable-p" function (:arguments ("symbol")) nil [17660 17867])
            ("counsel-describe-variable-function" variable (:default-value (function describe-variable)) nil [17869 18032])
            ("counsel-describe-variable-transformer" function (:arguments ("var")) nil [18034 18227])
            ("ivy-set-display-transformer" code nil nil [18229 18325])
            ("counsel-describe-variable" function (:user-visible-flag t) nil [18342 19016])
            ("ivy-set-actions" code nil nil [19051 19183])
            ("counsel-describe-function-function" variable (:default-value (function describe-function)) nil [19185 19348])
            ("counsel-describe-function-transformer" function (:arguments ("function-name")) nil [19350 19590])
            ("ivy-set-display-transformer" code nil nil [19592 19688])
            ("ivy-function-called-at-point" function nil nil [19690 19798])
            ("counsel-describe-function-preselect" variable (:default-value (function ivy-thing-at-point)) nil [19800 20064])
            ("counsel-describe-function" function (:user-visible-flag t) nil [20081 20886])
            ("counsel-set-variable-history" variable nil nil [20916 21003])
            ("counsel-read-setq-expression" function (:arguments ("sym")) nil [21005 22253])
            ("counsel--setq-doconst" function (:arguments ("x")) nil [22255 22649])
            ("declare-function" code nil nil [22651 22689])
            ("declare-function" code nil nil [22690 22734])
            ("declare-function" code nil nil [22735 22794])
            ("counsel-variable-documentation" variable
               (:default-value (quote ((t :inherit font-lock-comment-face)))
                :type "face")
                nil [22811 22956])
            ("counsel-set-variable" function
               (:user-visible-flag t
                :arguments ("sym"))
                nil [22958 25475])
            ("counsel-apropos" function (:user-visible-flag t) nil [25515 26882])
            ("info-lookup-mode" variable nil nil [26918 26943])
            ("declare-function" code nil nil [26944 27000])
            ("declare-function" code nil nil [27001 27056])
            ("declare-function" code nil nil [27057 27111])
            ("declare-function" code nil nil [27112 27166])
            ("declare-function" code nil nil [27167 27221])
            ("declare-function" code nil nil [27222 27264])
            ("counsel-info-lookup-symbol" function
               (:user-visible-flag t
                :arguments ("symbol" "mode"))
                nil [27281 28319])
            ("counsel-key-binding" variable
               (:default-value (quote ((t :inherit font-lock-keyword-face)))
                :type "face")
                nil [28340 28479])
            ("counsel-M-x-transformer" function (:arguments ("cmd")) nil [28481 29174])
            ("amx-initialized" variable nil nil [29176 29200])
            ("amx-cache" variable nil nil [29201 29219])
            ("declare-function" code nil nil [29220 29263])
            ("declare-function" code nil nil [29264 29316])
            ("declare-function" code nil nil [29317 29356])
            ("declare-function" code nil nil [29357 29394])
            ("smex-initialized-p" variable nil nil [29395 29422])
            ("smex-ido-cache" variable nil nil [29423 29446])
            ("declare-function" code nil nil [29447 29492])
            ("declare-function" code nil nil [29493 29547])
            ("declare-function" code nil nil [29548 29589])
            ("declare-function" code nil nil [29590 29629])
            ("counsel--M-x-externs" function nil nil [29631 30299])
            ("counsel--M-x-prompt" function nil nil [30301 30808])
            ("counsel-M-x-history" variable nil nil [30810 30873])
            ("counsel-M-x" function
               (:user-visible-flag t
                :arguments ("initial-input"))
                nil [30890 32510])
            ("ivy-set-actions" code nil nil [32512 32648])
            ("ivy-set-display-transformer" code nil nil [32650 32719])
            ("counsel-command-history-action-eval" function (:arguments ("cmd")) nil [32752 32847])
            ("counsel-command-history-action-edit-and-eval" function (:arguments ("cmd")) nil [32849 32988])
            ("ivy-set-actions" code nil nil [32990 33183])
            ("counsel-command-history" function (:user-visible-flag t) nil [33185 33469])
            ("counsel-library-candidates" function nil nil [33499 35445])
            ("counsel-load-library" function (:user-visible-flag t) nil [35462 35859])
            ("ivy-set-actions" code nil nil [35861 35945])
            ("declare-function" code nil nil [35975 36023])
            ("counsel-find-library-other-window" function (:arguments ("library")) nil [36024 36178])
            ("counsel-find-library-other-frame" function (:arguments ("library")) nil [36180 36397])
            ("ivy-set-actions" code nil nil [36399 36554])
            ("counsel-find-library" function (:user-visible-flag t) nil [36571 36924])
            ("declare-function" code nil nil [36952 37002])
            ("counsel-load-theme-action" function (:arguments ("x")) nil [37004 37321])
            ("counsel-load-theme" function (:user-visible-flag t) nil [37338 37700])
            ("ivy-set-actions" code nil nil [37727 37863])
            ("counsel-descbinds-history" variable nil nil [37865 37940])
            ("counsel--descbinds-cands" function (:arguments ("prefix" "buffer")) nil [37942 39446])
            ("counsel-descbinds-action-describe" function (:arguments ("x")) nil [39448 39633])
            ("counsel-descbinds-action-find" function (:arguments ("x")) nil [39635 39841])
            ("counsel-descbinds-action-info" function (:arguments ("x")) nil [39843 40089])
            ("counsel-descbinds" function
               (:user-visible-flag t
                :arguments ("prefix" "buffer"))
                nil [40106 40533])
            ("counsel-describe-face-function" variable (:default-value (function describe-face)) nil [40564 40717])
            ("counsel--face-at-point" function nil nil [40719 40983])
            ("counsel-describe-face" function (:user-visible-flag t) nil [40985 41334])
            ("counsel-customize-face" function (:arguments ("name")) nil [41336 41436])
            ("counsel-customize-face-other-window" function (:arguments ("name")) nil [41438 41582])
            ("ivy-set-actions" code nil nil [41584 41740])
            ("counsel--faces-format-function" function (:arguments ("format")) nil [41763 42296])
            ("counsel-faces" function (:user-visible-flag t) nil [42313 42958])
            ("ivy-set-actions" code nil nil [42960 43108])
            ("counsel-git-cmd" variable (:default-value "git ls-files --full-name --") nil [43137 43222])
            ("ivy-set-actions" code nil nil [43224 43355])
            ("counsel-locate-git-root" function nil nil [43357 43561])
            ("counsel-git" function
               (:user-visible-flag t
                :arguments ("initial-input"))
                nil [43578 44173])
            ("counsel-git-action" function (:arguments ("x")) nil [44175 44351])
            ("counsel-git-occur" function nil nil [44353 44659])
            ("counsel-dired-listing-switches" variable (:default-value "-alh") nil [44661 44763])
            ("counsel-cmd-to-dired" function (:arguments ("full-cmd" "filter")) nil [44765 45801])
            ("ivy-set-occur" code nil nil [45803 45850])
            ("counsel-git-grep-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map (kbd "C-l") (quote ivy-call-and-recenter)) (define-key map (kbd "M-q") (quote counsel-git-grep-query-replace)) (define-key map (kbd "C-c C-m") (quote counsel-git-grep-switch-cmd)) map)) nil [45876 46137])
            ("ivy-set-occur" code nil nil [46139 46196])
            ("ivy-set-display-transformer" code nil nil [46197 46274])
            ("counsel-git-grep-cmd-default" variable (:default-value "git --no-pager grep --full-name -n --no-color -i -I -e \"%s\"") nil [46276 46421])
            ("counsel-git-grep-cmd" variable nil nil [46423 46502])
            ("counsel--git-grep-count" variable nil nil [46504 46588])
            ("counsel--git-grep-count-threshold" variable (:default-value 20000) nil [46590 46712])
            ("counsel-git-grep-history" variable nil nil [46714 46787])
            ("counsel-git-grep-cmd-history" variable (:default-value (list counsel-git-grep-cmd-default)) nil [46789 46915])
            ("counsel-grep-post-action-hook" variable nil nil [46917 47082])
            ("counsel-git-grep-function" function (:arguments ("str" "_pred" "_unused")) nil [47084 47671])
            ("counsel-git-grep-action" function (:arguments ("x")) nil [47673 48405])
            ("counsel-git-grep-matcher" function (:arguments ("regexp" "candidates")) nil [48407 49477])
            ("counsel-git-grep-transformer" function (:arguments ("str")) nil [49479 49934])
            ("counsel-git-grep-projects-alist" variable nil nil [49936 50125])
            ("counsel--git-grep-cmd-and-proj" function (:arguments ("cmd")) nil [50127 50872])
            ("counsel--call" function (:arguments ("command")) nil [50874 52682])
            ("counsel--git-grep-count-func-default" function nil nil [52684 52996])
            ("counsel--git-grep-count-func" variable (:default-value (function counsel--git-grep-count-func-default)) nil [52998 53147])
            ("counsel-git-grep" function
               (:user-visible-flag t
                :arguments ("cmd" "initial-input"))
                nil [53164 54882])
            ("cl-pushnew" code nil nil [54883 54941])
            ("counsel-git-grep-proj-function" function (:arguments ("str")) nil [54943 55216])
            ("counsel-git-grep-switch-cmd" function (:user-visible-flag t) nil [55218 55697])
            ("counsel-gg-state" variable nil nil [55699 55778])
            ("counsel--gg-candidates" function (:arguments ("regex")) nil [55780 56193])
            ("counsel--gg-sentinel" function (:arguments ("process" "_msg")) nil [56195 56822])
            ("counsel--gg-count-sentinel" function (:arguments ("process" "_msg")) nil [56824 57215])
            ("counsel--gg-count" function (:arguments ("regex" "no-async")) nil [57217 58177])
            ("counsel--normalize-grep-match" function (:arguments ("str")) nil [58179 58545])
            ("counsel-git-grep-occur" function nil nil [58547 60049])
            ("counsel-git-grep-query-replace" function (:user-visible-flag t) nil [60051 61150])
            ("counsel-git-stash-kill-action" function (:arguments ("x")) nil [61177 61445])
            ("counsel-git-stash" function (:user-visible-flag t) nil [61462 61956])
            ("counsel-git-log-cmd" variable (:default-value "GIT_PAGER=cat git log --grep '%s'") nil [61981 62079])
            ("counsel-git-log-split-string-re" variable (:default-value "
commit ") nil [62081 62210])
            ("counsel-git-log-function" function (:arguments ("str")) nil [62212 62750])
            ("counsel-git-log-action" function (:arguments ("x")) nil [62752 62850])
            ("counsel-git-change-worktree-action" function (:arguments ("git-root-dir" "tree")) nil [62887 63351])
            ("counsel-git-worktree-list" function nil nil [63353 63589])
            ("counsel-git-worktree-parse-root" function (:arguments ("tree")) nil [63591 63725])
            ("counsel-git-close-worktree-files-action" function (:arguments ("root-dir")) nil [63727 64121])
            ("ivy-set-actions" code nil nil [64123 64231])
            ("counsel-git-change-worktree" function (:user-visible-flag t) nil [64248 64923])
            ("counsel-git-checkout-action" function (:arguments ("branch")) nil [64953 65318])
            ("counsel-git-branch-list" function nil nil [65320 65823])
            ("counsel-git-checkout" function (:user-visible-flag t) nil [65840 66077])
            ("counsel-yank-pop-truncate-radius" variable nil nil [66079 66120])
            ("counsel-git-log" function (:user-visible-flag t) nil [66137 66680])
            ("add-to-list" code nil nil [66682 66736])
            ("counsel-find-file-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map (kbd "C-DEL") (quote counsel-up-directory)) (define-key map (kbd "C-<backspace>") (quote counsel-up-directory)) (define-key map (kbd "C-M-y") (quote counsel-yank-directory)) map)) nil [66772 67028])
            ("counsel-yank-directory" function (:user-visible-flag t) nil [67030 67157])
            ("when" code nil nil [67159 67312])
            ("add-to-list" code nil nil [67313 67370])
            ("counsel-find-file-cd-bookmark-action" function (:arguments ("_")) nil [67371 67841])
            ("counsel-root-command" variable (:default-value "sudo") nil [67843 67949])
            ("counsel-find-file-as-root" function (:arguments ("x")) nil [67951 68673])
            ("counsel--yes-or-no-p" function (:arguments ("fmt" "args")) nil [68675 69252])
            ("counsel-find-file-delete" function (:arguments ("x")) nil [69254 69670])
            ("counsel-find-file-move" function (:arguments ("x")) nil [69672 70065])
            ("counsel-find-file-mkdir-action" function (:arguments ("_x")) nil [70067 70172])
            ("ivy-set-actions" code nil nil [70174 70606])
            ("counsel-find-file-at-point" variable nil nil [70608 70744])
            ("counsel-preselect-current-file" variable nil nil [70746 70887])
            ("counsel-find-file-ignore-regexp" variable nil nil [70889 71727])
            ("counsel--find-file-matcher" function (:arguments ("regexp" "candidates")) nil [71729 72415])
            ("declare-function" code nil nil [72417 72455])
            ("counsel-find-file-speedup-remote" variable (:default-value t) nil [72457 72574])
            ("counsel-find-file-action" function (:arguments ("x")) nil [72576 72890])
            ("counsel--preselect-file" function nil nil [72892 73374])
            ("counsel-find-file" function
               (:user-visible-flag t
                :arguments ("initial-input"))
                nil [73391 73975])
            ("ivy-set-occur" code nil nil [73977 74036])
            ("counsel-find-file-occur-cmd" variable (:default-value "ls -a | grep -i -E '%s' | xargs -d '\\n' ls -d --group-directories-first") nil [74038 74198])
            ("counsel-find-file-occur-use-find" variable (:default-value (not (eq system-type (quote gnu/linux)))) nil [74200 74354])
            ("counsel--expand-ls" function (:arguments ("cmd")) nil [74356 74512])
            ("counsel--occur-cmd-find" function nil nil [74514 74856])
            ("counsel--cmd-to-dired-by-type" function (:arguments ("type" "cmd")) nil [74858 75127])
            ("counsel-find-file-occur" function nil nil [75129 75484])
            ("counsel-up-directory" function (:user-visible-flag t) nil [75486 76365])
            ("counsel-at-git-issue-p" function nil nil [76367 76695])
            ("counsel-github-url-p" function nil nil [76697 77554])
            ("counsel-emacs-url-p" function nil nil [77556 77994])
            ("counsel-url-expansions-alist" variable nil nil [77996 79069])
            ("counsel-url-expand" function nil nil [79071 79734])
            ("recentf-list" variable nil nil [79759 79780])
            ("declare-function" code nil nil [79781 79822])
            ("counsel-recentf" function (:user-visible-flag t) nil [79839 80175])
            ("ivy-set-actions" code nil nil [80176 80356])
            ("counsel-bookmark-avoid-dired" variable nil nil [80382 80592])
            ("bookmark-alist" variable nil nil [80594 80617])
            ("declare-function" code nil nil [80618 80665])
            ("declare-function" code nil nil [80666 80714])
            ("declare-function" code nil nil [80715 80766])
            ("declare-function" code nil nil [80767 80829])
            ("counsel-bookmark" function (:user-visible-flag t) nil [80846 81798])
            ("counsel--apply-bookmark-fn" function (:arguments ("fn")) nil [81800 81968])
            ("ivy-set-actions" code nil nil [81970 82255])
            ("counsel-bookmarked-directory--candidates" function nil nil [82293 82583])
            ("counsel-bookmarked-directory" function (:user-visible-flag t) nil [82600 83013])
            ("ivy-set-actions" code nil nil [83015 83447])
            ("counsel-file-register" function (:user-visible-flag t) nil [83493 84757])
            ("ivy-set-actions" code nil nil [84759 84848])
            ("counsel-locate-cmd" variable (:default-value (cond ((eq system-type (quote darwin)) (quote counsel-locate-cmd-noregex)) ((and (eq system-type (quote windows-nt)) (executable-find "es.exe")) (quote counsel-locate-cmd-es)) (t (quote counsel-locate-cmd-default)))) nil [84872 85752])
            ("ivy-set-actions" code nil nil [85754 85933])
            ("counsel-set-async-exit-code" code nil nil [85935 85998])
            ("counsel-locate-history" variable nil nil [86000 86069])
            ("counsel-locate-action-extern" function
               (:user-visible-flag t
                :arguments ("x"))
                nil [86071 86708])
            ("defalias" code nil nil [86710 86777])
            ("declare-function" code nil nil [86779 86818])
            ("counsel-locate-action-dired" function (:arguments ("x")) nil [86820 86907])
            ("counsel-locate-cmd-default" function (:arguments ("input")) nil [86909 87132])
            ("counsel-locate-cmd-noregex" function (:arguments ("input")) nil [87134 87290])
            ("counsel-locate-cmd-mdfind" function (:arguments ("input")) nil [87292 87450])
            ("counsel-locate-cmd-es" function (:arguments ("input")) nil [87452 87668])
            ("counsel-locate-function" function (:arguments ("input")) nil [87670 87892])
            ("counsel-locate" function
               (:user-visible-flag t
                :arguments ("initial-input"))
                nil [87909 88548])
            ("counsel-fzf-cmd" variable (:default-value "fzf -f \"%s\"") nil [88569 88640])
            ("counsel--fzf-dir" variable nil nil [88642 88705])
            ("counsel-fzf-dir-function" variable (:default-value (quote counsel-fzf-dir-function-projectile)) nil [88707 88831])
            ("counsel-fzf-dir-function-projectile" function nil nil [88833 89057])
            ("counsel-fzf-function" function (:arguments ("str")) nil [89059 89248])
            ("counsel-fzf" function
               (:user-visible-flag t
                :arguments ("initial-input" "initial-directory" "fzf-prompt"))
                nil [89265 90419])
            ("counsel-fzf-action" function (:arguments ("x")) nil [90421 90582])
            ("counsel-fzf-occur" function nil nil [90584 90837])
            ("ivy-set-occur" code nil nil [90839 90886])
            ("ivy-set-actions" code nil nil [90888 91014])
            ("counsel-set-async-exit-code" code nil nil [91016 91076])
            ("counsel-dpkg" function (:user-visible-flag t) nil [91113 91832])
            ("counsel-rpm" function (:user-visible-flag t) nil [91868 92599])
            ("counsel-file-jump" function
               (:user-visible-flag t
                :arguments ("initial-input" "initial-directory"))
                nil [92641 93862])
            ("counsel-dired-jump" function
               (:user-visible-flag t
                :arguments ("initial-input" "initial-directory"))
                nil [93905 94802])
            ("counsel--grep-mode-occur" function (:arguments ("git-grep-dir-is-file")) nil [94813 95793])
            ("counsel-ag-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map (kbd "C-l") (quote ivy-call-and-recenter)) (define-key map (kbd "M-q") (quote counsel-git-grep-query-replace)) (define-key map (kbd "C-'") (quote swiper-avy)) map)) nil [95813 96047])
            ("counsel-ag-base-command" variable (:default-value (if (memq system-type (quote (ms-dos windows-nt))) "ag --vimgrep %s" "ag --nocolor --nogroup %s")) nil [96049 96378])
            ("counsel-ag-command" variable nil nil [96380 96411])
            ("counsel-set-async-exit-code" code nil nil [96413 96475])
            ("ivy-set-occur" code nil nil [96476 96521])
            ("ivy-set-display-transformer" code nil nil [96522 96593])
            ("counsel--command-args-separator" variable
               (:constant-flag t
                :default-value "-- ")
                nil [96595 96643])
            ("counsel--split-command-args" function (:arguments ("arguments")) nil [96645 97221])
            ("counsel--format-ag-command" function (:arguments ("extra-args" "needle")) nil [97223 97598])
            ("counsel--grep-regex" function (:arguments ("str")) nil [97600 97725])
            ("counsel-ag-function" function (:arguments ("string")) nil [97727 98334])
            ("counsel-ag" function
               (:user-visible-flag t
                :arguments ("initial-input" "initial-directory" "extra-ag-args" "ag-prompt"))
                nil [98351 100171])
            ("cl-pushnew" code nil nil [100173 100225])
            ("counsel-grep-like-occur" function (:arguments ("cmd-template")) nil [100227 101319])
            ("counsel-ag-occur" function nil nil [101321 101451])
            ("counsel-pt-base-command" variable (:default-value "pt --nocolor --nogroup -e %s") nil [101471 101622])
            ("counsel-pt" function
               (:user-visible-flag t
                :arguments ("initial-input"))
                nil [101639 101999])
            ("cl-pushnew" code nil nil [102000 102052])
            ("counsel-ack-base-command" variable (:default-value (concat (file-name-nondirectory (or (executable-find "ack-grep") "ack")) " --nocolor --nogroup %s")) nil [102073 102307])
            ("counsel-ack" function
               (:user-visible-flag t
                :arguments ("initial-input"))
                nil [102324 102687])
            ("counsel-rg-base-command" variable (:default-value "rg -S --no-heading --line-number --color never %s .") nil [102708 102933])
            ("counsel-set-async-exit-code" code nil nil [102935 102997])
            ("ivy-set-occur" code nil nil [102998 103043])
            ("ivy-set-display-transformer" code nil nil [103044 103115])
            ("counsel-rg" function
               (:user-visible-flag t
                :arguments ("initial-input" "initial-directory" "extra-rg-args" "rg-prompt"))
                nil [103132 103697])
            ("cl-pushnew" code nil nil [103698 103750])
            ("counsel-grep-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map (kbd "C-l") (quote ivy-call-and-recenter)) (define-key map (kbd "M-q") (quote swiper-query-replace)) (define-key map (kbd "C-'") (quote swiper-avy)) map)) nil [103772 103998])
            ("counsel-grep-base-command" variable (:default-value "grep -E -n -e %s %s") nil [104000 104335])
            ("counsel-grep-command" variable nil nil [104337 104370])
            ("counsel-grep-function" function (:arguments ("string")) nil [104372 104710])
            ("counsel-grep-action" function (:arguments ("x")) nil [104712 106369])
            ("counsel-grep-occur" function nil nil [106371 106645])
            ("ivy-set-occur" code nil nil [106647 106696])
            ("counsel-set-async-exit-code" code nil nil [106697 106745])
            ("counsel-grep" function
               (:user-visible-flag t
                :arguments ("initial-input"))
                nil [106762 108659])
            ("counsel-grep-swiper-limit" variable (:default-value 300000) nil [108691 108937])
            ("counsel-grep-or-swiper" function
               (:user-visible-flag t
                :arguments ("initial-input"))
                nil [108954 109605])
            ("counsel-recoll-function" function (:arguments ("str")) nil [109629 109841])
            ("counsel-recoll" function
               (:user-visible-flag t
                :arguments ("initial-input"))
                nil [110281 111155])
            ("counsel-org-tags" variable nil nil [111188 111253])
            ("org-outline-regexp" variable nil nil [111255 111282])
            ("org-indent-mode" variable nil nil [111283 111307])
            ("org-indent-indentation-per-level" variable nil nil [111308 111349])
            ("org-tags-column" variable nil nil [111350 111374])
            ("declare-function" code nil nil [111375 111419])
            ("declare-function" code nil nil [111420 111457])
            ("declare-function" code nil nil [111458 111502])
            ("declare-function" code nil nil [111503 111553])
            ("counsel--org-make-tag-string" function nil nil [111555 111747])
            ("counsel-org-change-tags" function (:arguments ("tags")) nil [111749 113234])
            ("counsel-org--set-tags" function nil nil [113236 113471])
            ("org-agenda-bulk-marked-entries" variable nil nil [113473 113512])
            ("declare-function" code nil nil [113514 113553])
            ("declare-function" code nil nil [113554 113602])
            ("counsel-org-tag-action" function (:arguments ("x")) nil [113604 115476])
            ("counsel-org-tag-prompt" function nil nil [115478 115632])
            ("org-setting-tags" variable nil nil [115634 115659])
            ("org-last-tags-completion-table" variable nil nil [115660 115699])
            ("org-tag-persistent-alist" variable nil nil [115700 115733])
            ("org-tag-alist" variable nil nil [115734 115756])
            ("org-complete-tags-always-offer-all-agenda-tags" variable nil nil [115757 115812])
            ("declare-function" code nil nil [115814 115855])
            ("declare-function" code nil nil [115856 115900])
            ("declare-function" code nil nil [115901 115945])
            ("declare-function" code nil nil [115946 116003])
            ("declare-function" code nil nil [116004 116045])
            ("declare-function" code nil nil [116046 116097])
            ("declare-function" code nil nil [116098 116151])
            ("counsel-org-tag" function (:user-visible-flag t) nil [116168 117701])
            ("counsel-org-tag-agenda" function (:user-visible-flag t) nil [117718 118055])
            ("define-obsolete-variable-alias" code nil nil [118057 118168])
            ("counsel-org-headline-display-tags" variable nil nil [118170 118312])
            ("define-obsolete-variable-alias" code nil nil [118314 118425])
            ("counsel-org-headline-display-todo" variable nil nil [118427 118578])
            ("counsel-org-headline-display-priority" variable nil nil [118580 118732])
            ("declare-function" code nil nil [118734 118774])
            ("declare-function" code nil nil [118775 118822])
            ("declare-function" code nil nil [118823 118872])
            ("defalias" code nil nil [118889 118935])
            ("counsel-org-goto-all" function (:user-visible-flag t) nil [118952 119411])
            ("counsel-org-goto-action" function (:arguments ("x")) nil [119413 119518])
            ("org-version" variable nil nil [119520 119540])
            ("counsel--org-get-heading-args" function nil nil [119542 120169])
            ("declare-function" code nil nil [120195 120241])
            ("declare-function" code nil nil [120242 120294])
            ("org-attach-directory" variable nil nil [120295 120324])
            ("counsel-org-files" function nil nil [120326 121429])
            ("counsel-org-file" function (:user-visible-flag t) nil [121446 121668])
            ("org-entities" variable nil nil [121696 121717])
            ("org-entities-user" variable nil nil [121718 121744])
            ("counsel-org-entity" function (:user-visible-flag t) nil [121761 123244])
            ("org-capture-templates" variable nil nil [123273 123303])
            ("org-capture-templates-contexts" variable nil nil [123304 123343])
            ("declare-function" code nil nil [123344 123391])
            ("declare-function" code nil nil [123392 123453])
            ("declare-function" code nil nil [123454 123510])
            ("declare-function" code nil nil [123511 123573])
            ("counsel-org-capture" function (:user-visible-flag t) nil [123590 124497])
            ("ivy-set-actions" code nil nil [124499 124968])
            ("org-odd-levels-only" variable nil nil [125006 125034])
            ("declare-function" code nil nil [125035 125086])
            ("declare-function" code nil nil [125087 125126])
            ("declare-function" code nil nil [125127 125167])
            ("declare-function" code nil nil [125168 125215])
            ("counsel-org-agenda-headlines-action-goto" function (:arguments ("headline")) nil [125217 125430])
            ("ivy-set-actions" code nil nil [125432 125547])
            ("counsel-org-agenda-headlines-history" variable nil nil [125549 125646])
            ("define-obsolete-variable-alias" code nil nil [125648 125756])
            ("define-obsolete-variable-alias" code nil nil [125757 125869])
            ("counsel-outline-display-style" variable (:default-value (quote path)) nil [125871 126595])
            ("define-obsolete-variable-alias" code nil nil [126597 126702])
            ("define-obsolete-variable-alias" code nil nil [126703 126817])
            ("counsel-outline-path-separator" variable (:default-value "/") nil [126819 127044])
            ("declare-function" code nil nil [127046 127091])
            ("counsel-org-agenda-headlines--candidates" function nil nil [127093 128567])
            ("counsel-org-agenda-headlines" function (:user-visible-flag t) nil [128584 129029])
            ("counsel-mark-ring" function (:user-visible-flag t) nil [129072 130718])
            ("package--initialized" variable nil nil [130743 130772])
            ("package-alist" variable nil nil [130773 130795])
            ("package-archive-contents" variable nil nil [130796 130829])
            ("declare-function" code nil nil [130830 130878])
            ("declare-function" code nil nil [130879 130922])
            ("declare-function" code nil nil [130923 130971])
            ("counsel--package-candidates" function nil nil [130973 131503])
            ("counsel-package" function (:user-visible-flag t) nil [131505 132169])
            ("cl-pushnew" code nil nil [132171 132246])
            ("counsel-package-action" function (:arguments ("package")) nil [132248 132477])
            ("counsel-package-action-describe" function (:arguments ("package")) nil [132479 132604])
            ("counsel-package-action-homepage" function (:arguments ("package")) nil [132606 132886])
            ("counsel--package-sort" function (:arguments ("a" "b")) nil [132888 133194])
            ("ivy-set-actions" code nil nil [133196 133357])
            ("tmm-km-list" variable nil nil [133378 133402])
            ("declare-function" code nil nil [133403 133442])
            ("declare-function" code nil nil [133443 133489])
            ("declare-function" code nil nil [133490 133530])
            ("counsel-tmm-prompt" function (:arguments ("menu")) nil [133532 134269])
            ("tmm-table-undef" variable nil nil [134271 134295])
            ("counsel-tmm" function (:user-visible-flag t) nil [134312 134548])
            ("counsel-yank-pop-truncate-radius" variable (:default-value 2) nil [134574 134717])
            ("counsel--yank-pop-truncate" function (:arguments ("str")) nil [134719 135706])
            ("counsel-yank-pop-separator" variable (:default-value "
") nil [135708 135942])
            ("make-obsolete-variable" code nil nil [135944 136033])
            ("counsel-yank-pop-height" variable (:default-value 5) nil [136060 136172])
            ("counsel--yank-pop-format-function" function (:arguments ("cand-pairs")) nil [136174 136636])
            ("counsel--yank-pop-position" function (:arguments ("s")) nil [136638 137084])
            ("counsel-string-non-blank-p" function (:arguments ("s")) nil [137086 137283])
            ("counsel-yank-pop-filter" variable (:default-value (function counsel-string-non-blank-p)) nil [137285 137759])
            ("counsel--yank-pop-kills" function nil nil [137761 138501])
            ("counsel-yank-pop-after-point" variable nil nil [138503 138863])
            ("counsel-yank-pop-action" function (:arguments ("s")) nil [138865 139434])
            ("counsel-yank-pop-action-remove" function (:arguments ("s")) nil [139436 139945])
            ("counsel-yank-pop-action-rotate" function (:arguments ("s")) nil [139947 140598])
            ("counsel-yank-pop-preselect-last" variable nil nil [140600 141176])
            ("xor" function (:prototype-flag t) nil [141178 141201])
            ("counsel-yank-pop" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [141218 142619])
            ("add-to-list" code nil nil [142621 142676])
            ("ivy-set-actions" code nil nil [142678 142813])
            ("make-obsolete-variable" code nil nil [142845 142940])
            ("counsel-evil-registers-height" variable (:default-value 5) nil [142967 143091])
            ("counsel-evil-registers" function (:user-visible-flag t) nil [143093 143684])
            ("add-to-list" code nil nil [143686 143747])
            ("counsel-evil-registers-action" function (:arguments ("s")) nil [143749 143978])
            ("imenu-auto-rescan" variable nil nil [144001 144027])
            ("imenu-auto-rescan-maxout" variable nil nil [144028 144061])
            ("declare-function" code nil nil [144062 144106])
            ("declare-function" code nil nil [144107 144157])
            ("counsel-imenu-get-candidates-from" function (:arguments ("alist" "prefix")) nil [144159 145275])
            ("counsel-imenu-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map (kbd "C-l") (quote ivy-call-and-recenter)) map)) nil [145277 145404])
            ("counsel-imenu-categorize-functions" function (:arguments ("items")) nil [145406 145675])
            ("counsel-imenu" function (:user-visible-flag t) nil [145692 146721])
            ("counsel-list-processes-action-delete" function (:arguments ("x")) nil [146753 146965])
            ("counsel-list-processes-action-switch" function (:arguments ("x")) nil [146967 147229])
            ("counsel-list-processes" function (:user-visible-flag t) nil [147246 147796])
            ("counsel-ace-link" function (:user-visible-flag t) nil [147822 149047])
            ("counsel-expression-history" function nil nil [149098 149570])
            ("counsel-shell-command-history" function nil nil [149587 149880])
            ("counsel-minibuffer-history" function (:user-visible-flag t) nil [149897 150247])
            ("counsel--browse-history" function (:arguments ("elements")) nil [150276 150692])
            ("eshell-history-ring" variable nil nil [150694 150722])
            ("counsel-esh-history" function (:user-visible-flag t) nil [150739 150881])
            ("comint-input-ring" variable nil nil [150883 150909])
            ("counsel-shell-history" function (:user-visible-flag t) nil [150926 151066])
            ("hydra-curr-body-fn" variable nil nil [151095 151122])
            ("declare-function" code nil nil [151123 151173])
            ("counsel-hydra-heads" function (:user-visible-flag t) nil [151175 151944])
            ("declare-function" code nil nil [151969 152021])
            ("declare-function" code nil nil [152022 152074])
            ("declare-function" code nil nil [152075 152126])
            ("declare-function" code nil nil [152127 152187])
            ("declare-function" code nil nil [152188 152248])
            ("declare-function" code nil nil [152249 152298])
            ("declare-function" code nil nil [152299 152365])
            ("declare-function" code nil nil [152366 152416])
            ("counsel-semantic-action" function (:arguments ("x")) nil [152418 152521])
            ("counsel-semantic-history" variable nil nil [152523 152596])
            ("counsel-semantic-format-tag" function (:arguments ("tag")) nil [152598 152991])
            ("counsel-flatten-forest" function (:arguments ("func" "treep" "forest")) nil [152993 153583])
            ("counsel-semantic-tags" function nil nil [153585 154020])
            ("counsel-semantic" function (:user-visible-flag t) nil [154022 154467])
            ("counsel-semantic-or-imenu" function nil nil [154469 154618])
            ("define-obsolete-variable-alias" code nil nil [154643 154745])
            ("counsel-outline-face-style" variable nil nil [154747 156401])
            ("define-obsolete-variable-alias" code nil nil [156403 156509])
            ("counsel-outline-custom-faces" variable nil nil [156511 156903])
            ("counsel-outline-settings" variable (:default-value (quote ((emacs-lisp-mode :outline-regexp ";;[;*]+[ 	]+" :outline-level counsel-outline-level-emacs-lisp) (org-mode :outline-title counsel-outline-title-org :action counsel-org-goto-action :history counsel-org-goto-history :caller counsel-org-goto) (markdown-mode :outline-title counsel-outline-title-markdown) (latex-mode :outline-title counsel-outline-title-latex)))) nil [156905 159652])
            ("counsel-outline-title" function nil nil [159654 159875])
            ("counsel-outline-title-org" function nil nil [159877 160088])
            ("counsel-outline-title-markdown" function nil nil [160090 160513])
            ("counsel-outline-title-latex" function nil nil [160550 161729])
            ("counsel-outline-level-emacs-lisp" function nil nil [161731 162041])
            ("counsel-outline--preselect" variable nil nil [162043 162139])
            ("counsel-outline-candidates" function (:arguments ("settings")) nil [162141 165103])
            ("counsel-outline--add-face" function (:arguments ("name" "level" "face-style" "custom-faces")) nil [165105 165800])
            ("counsel-outline-action" function (:arguments ("x")) nil [165802 165879])
            ("counsel-outline" function (:user-visible-flag t) nil [165896 166502])
            ("counsel-ibuffer--buffer-name" variable nil nil [166527 166621])
            ("counsel-ibuffer" function
               (:user-visible-flag t
                :arguments ("name"))
                nil [166638 167065])
            ("declare-function" code nil nil [167067 167110])
            ("declare-function" code nil nil [167111 167162])
            ("declare-function" code nil nil [167163 167212])
            ("ibuffer-movement-cycle" variable nil nil [167213 167244])
            ("counsel-ibuffer--get-buffers" function nil nil [167246 168517])
            ("counsel-ibuffer-visit-buffer" function (:arguments ("x")) nil [168519 168625])
            ("counsel-ibuffer-visit-buffer-other-window" function (:arguments ("x")) nil [168627 168777])
            ("counsel-ibuffer-visit-ibuffer" function (:arguments ("_")) nil [168779 168900])
            ("ivy-set-actions" code nil nil [168902 169063])
            ("counsel--buffers-with-mode" function (:arguments ("mode")) nil [169103 169371])
            ("declare-function" code nil nil [169373 169410])
            ("counsel-switch-to-shell-buffer" function (:user-visible-flag t) nil [169427 169700])
            ("counsel--switch-to-shell" function (:arguments ("name")) nil [169702 170191])
            ("counsel-unicode-char-history" variable nil nil [170221 170302])
            ("counsel--unicode-names" function nil nil [170304 171206])
            ("counsel--unicode-table" variable (:default-value (lazy-completion-table counsel--unicode-table counsel--unicode-names)) nil [171208 171422])
            ("counsel-unicode-char" function
               (:user-visible-flag t
                :arguments ("count"))
                nil [171439 172235])
            ("counsel-colors-action-insert-hex" function (:arguments ("color")) nil [172259 172398])
            ("counsel-colors-action-kill-hex" function (:arguments ("color")) nil [172400 172537])
            ("counsel-colors-emacs-history" variable nil nil [172567 172647])
            ("counsel-colors--name-to-hex" function (:arguments ("name")) nil [172649 172891])
            ("shr-color-visible-luminance-min" variable nil nil [172893 172933])
            ("declare-function" code nil nil [172934 172982])
            ("counsel-colors--formatter" function (:arguments ("formatter")) nil [172984 173551])
            ("counsel-colors-emacs" function (:user-visible-flag t) nil [173568 175175])
            ("ivy-set-actions" code nil nil [175177 175352])
            ("shr-color-html-colors-alist" variable nil nil [175380 175416])
            ("counsel-colors--web-alist" function nil nil [175418 176100])
            ("counsel-colors-web-history" variable nil nil [176102 176178])
            ("counsel-colors-web" function (:user-visible-flag t) nil [176195 177115])
            ("ivy-set-actions" code nil nil [177117 177290])
            ("declare-function" code nil nil [177330 177372])
            ("declare-function" code nil nil [177373 177416])
            ("counsel--run" function (:arguments ("program-and-args")) nil [177418 177587])
            ("counsel--sl" function (:arguments ("cmd")) nil [177589 177695])
            ("counsel-rhythmbox-play-song" function (:arguments ("song")) nil [177697 178428])
            ("counsel-rhythmbox-enqueue-song" function (:arguments ("song")) nil [178430 178753])
            ("counsel-rhythmbox-toggle-shuffle" function (:arguments ("_song")) nil [178755 179280])
            ("counsel-rhythmbox-history" variable nil nil [179282 179357])
            ("counsel-rhythmbox-songs" variable nil nil [179359 179395])
            ("counsel-rhythmbox-current-song" function nil nil [179397 179978])
            ("counsel-rhythmbox" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [179995 181522])
            ("xdg" include nil nil [181549 181569])
            ("defalias" code nil nil [181571 181877])
            ("defalias" code nil nil [181879 182202])
            ("counsel-linux-apps-directories" variable (:default-value (mapcar (lambda (dir) (expand-file-name "applications" dir)) (cons (counsel--xdg-data-home) (counsel--xdg-data-dirs)))) nil [182204 182505])
            ("counsel-linux-app-format-function" variable (:default-value (function counsel-linux-app-format-function-default)) nil [182507 183185])
            ("counsel-application-name" variable
               (:default-value (quote ((t :inherit font-lock-builtin-face)))
                :type "face")
                nil [183187 183324])
            ("counsel-outline-1" variable
               (:default-value (quote ((t :inherit org-level-1)))
                :type "face")
                nil [183326 183445])
            ("counsel-outline-2" variable
               (:default-value (quote ((t :inherit org-level-2)))
                :type "face")
                nil [183447 183566])
            ("counsel-outline-3" variable
               (:default-value (quote ((t :inherit org-level-3)))
                :type "face")
                nil [183568 183687])
            ("counsel-outline-4" variable
               (:default-value (quote ((t :inherit org-level-4)))
                :type "face")
                nil [183689 183808])
            ("counsel-outline-5" variable
               (:default-value (quote ((t :inherit org-level-5)))
                :type "face")
                nil [183810 183929])
            ("counsel-outline-6" variable
               (:default-value (quote ((t :inherit org-level-6)))
                :type "face")
                nil [183931 184050])
            ("counsel-outline-7" variable
               (:default-value (quote ((t :inherit org-level-7)))
                :type "face")
                nil [184052 184171])
            ("counsel-outline-8" variable
               (:default-value (quote ((t :inherit org-level-8)))
                :type "face")
                nil [184173 184292])
            ("counsel-outline-default" variable
               (:default-value (quote ((t :inherit minibuffer-prompt)))
                :type "face")
                nil [184294 184417])
            ("counsel-linux-apps-faulty" variable nil nil [184419 184491])
            ("counsel--linux-apps-cache" variable nil nil [184493 184564])
            ("counsel--linux-apps-cached-files" variable nil nil [184566 184645])
            ("counsel--linux-apps-cache-timestamp" variable nil nil [184647 184754])
            ("counsel--linux-apps-cache-format-function" variable nil nil [184756 184877])
            ("counsel-linux-app-format-function-default" function (:arguments ("name" "comment" "exec")) nil [184879 185310])
            ("counsel-linux-app-format-function-name-first" function (:arguments ("name" "comment" "exec")) nil [185312 185674])
            ("counsel-linux-app-format-function-name-only" function (:arguments ("name" "comment" "_exec")) nil [185676 185925])
            ("counsel-linux-app-format-function-command-only" function (:arguments ("_name" "_comment" "exec")) nil [185927 186085])
            ("counsel-linux-apps-list-desktop-files" function nil nil [186087 186830])
            ("counsel-linux-app--parse-file" function (:arguments ("file")) nil [186832 188670])
            ("counsel-linux-apps-parse" function (:arguments ("desktop-entries-alist")) nil [188672 189212])
            ("counsel-linux-apps-list" function nil nil [189214 190186])
            ("counsel-linux-app-action-default" function (:arguments ("desktop-shortcut")) nil [190189 190340])
            ("counsel-linux-app-action-file" function (:arguments ("desktop-shortcut")) nil [190342 190569])
            ("counsel-linux-app-action-open-desktop" function (:arguments ("desktop-shortcut")) nil [190571 190870])
            ("ivy-set-actions" code nil nil [190872 191032])
            ("counsel-linux-app" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [191049 191477])
            ("counsel-wmctrl-action" function (:arguments ("x")) nil [191501 191631])
            ("counsel-wmctrl-ignore" variable (:default-value (quote ("XdndCollectionWindowImp" "unity-launcher" "unity-panel" "unity-dash" "Hud" "Desktop"))) nil [191633 191874])
            ("counsel--wmctrl-parse" function (:arguments ("s")) nil [191876 192160])
            ("counsel-wmctrl" function (:user-visible-flag t) nil [192162 192480])
            ("counsel-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (dolist (binding (quote ((execute-extended-command . counsel-M-x) (describe-bindings . counsel-descbinds) (describe-function . counsel-describe-function) (describe-variable . counsel-describe-variable) (apropos-command . counsel-apropos) (describe-face . counsel-describe-face) (list-faces-display . counsel-faces) (find-file . counsel-find-file) (find-library . counsel-find-library) (imenu . counsel-imenu) (load-library . counsel-load-library) (load-theme . counsel-load-theme) (yank-pop . counsel-yank-pop) (info-lookup-symbol . counsel-info-lookup-symbol) (pop-to-mark-command . counsel-mark-ring) (bookmark-jump . counsel-bookmark)))) (define-key map (vector (quote remap) (car binding)) (cdr binding))) map)) nil [192501 193610])
            ("counsel-mode-override-describe-bindings" variable nil nil [193612 193773])
            ("define-minor-mode" code nil nil [193790 194523])
            ("counsel" package nil nil [194525 194543]))          
      :file "counsel.el"
      :pointmax 194570
      :fsize 194569
      :lastmodtime '(23593 53967 129050 30000)
      :unmatched-syntax nil))
  :file "!home!linguini!.emacs.d!elpa!counsel-20181223.325!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
