
;;; package --- Summary
;;; Commentary: my-moe-dark-theme.el --- An eye-candy theme for Emacser

;; Author: linguini
;; Based on "moe-dark-theme"

;;; Code:

(deftheme my-moe-dark
  "Created 2019-02-08.")


;; Palette colors.
(setq yellow-1 "#fce94f")
(setq yellow-2 "#ffd700")
(setq yellow-3 "#c4a000")
(setq yellow-3-5 "#aaaa11")
(setq yellow-4 "#875f00")

(setq orange-1 "#ffaf5f")
(setq orange-2 "#ff8700")
(setq orange-3 "#ff5d17")
(setq orange-4 "#d75f00")
(setq orange-5 "#af5f00")

(setq magenta-1 "#ff7bbb")
(setq magenta-2 "#ff4ea3")
(setq magenta-3 "#ff1f8b")

(setq green-1 "#afff00")
(setq green-2 "#a1db00")
(setq green-3 "#5faf00")
(setq green-4 "#008700")
(setq green-5 "#005f00")

(setq cyan-1 "#87ffff")
(setq cyan-2 "#87d7af")
(setq cyan-3 "#00d7af")
(setq cyan-4 "#00ac8a")
(setq cyan-5 "#5faf87")
(setq cyan-6 "#005f5f")
(setq cyan-7 "#236f73")

(setq blue-1 "#5fafd7")
(setq blue-2 "#1f5bff")
(setq blue-3 "#005f87")
(setq blue-4 "#005faf")
(setq blue-5 "#0000af")
(setq blue-6 "#00005f")

(setq purple-1 "#d18aff")
(setq purple-2 "#af5fff")
(setq purple-3 "#9a08ff")
(setq purple-4 "#6c0099")

(setq red-1 "#ef2929")
(setq red-2 "#dd0000")
(setq red-3 "#a40000")
(setq red-4 "#5f0000")

(setq white-1 "#c6c6c6")
(setq white-2 "#c6c6c6")
(setq white-3 "#b2b2b2")

(setq black-1 "#a8a8a8")
(setq black-2 "#8a8a8a")
(setq black-2-5 "#6c6c6c")
(setq black-3 "#4e4e4e")
(setq black-4 "#3a3a3a")
(setq black-5 "#303030")
(setq black-6 "#000000")

(setq LIGHT_BG "#fdfde7")
(setq white-0 "#eeeeee")

(setq green-01 "#d7ff00")
(setq green-02 "#5fd700")
(setq green-0 "#d7ff5f")
(setq green-00 "#d7ff87")

(setq cyan-0 "#d7ffd7")

(setq blue-01 "#c3c9f8")
(setq blue-0 "#afd7ff")
(setq blue-00 "#d7d7ff")

(setq yellow-0 "#ffff87")
(setq yellow-00 "#ffffaf")

(setq purple-0 "#af87ff")
(setq purple-00 "#e6a8df")

(setq red-0 "#ff4b4b")
(setq red-00 "#ffafaf")

(setq magenta-0 "#ffafd7")
(setq magenta-00 "#ffd7ff")

(setq orange-0 "#ffaf87")
(setq orange-00 "#ffd787")
(setq orange-000 "#ffd7af")

(setq linum-dark "#87875f")
(setq linum-light "#d7d7af")



 ;; 'my-moe-dark
(set-face-attribute 'default nil 
     :background black-5 
     :foreground white-1
     :slant 'normal
     :weight 'normal)

(set-face-attribute 'cursor nil
		    :background white-0)

(set-face-attribute 'escape-glyph nil
		    :foreground yellow-3)

(set-face-attribute 'homoglyph nil
		    :foreground "cyan")

(set-face-attribute 'minibuffer-prompt nil
		    
		    :foreground black-4
		    :background green-2)
(set-face-attribute 'ivy-current-match nil
		    :weight 'bold
		    :foreground orange-2
		    :inherit 'highlight)

(set-face-attribute 'highlight nil
		    :background black-4)

(set-face-attribute 'region nil
		    :foreground black-4
		    :background green-0)

(set-face-attribute 'shadow nil
		    :foreground white-3)

(set-face-attribute 'secondary-selection nil
		    :foreground white-0
		    :background blue-3)

(set-face-attribute 'trailing-whitespace nil
		    :background red-3)

(set-face-attribute 'font-lock-builtin-face nil
		    :foreground purple-1)

(set-face-attribute 'font-lock-comment-delimiter-face nil
		    :foreground black-2-5
		    :slant 'italic)

(set-face-attribute 'font-lock-comment-face nil
		    :foreground black-2-5
		    :slant 'italic)

(set-face-attribute 'font-lock-constant-face nil
		    :foreground blue-1)

(set-face-attribute 'font-lock-doc-face nil
		    :foreground red-0)

(set-face-attribute 'font-lock-function-name-face nil
		    :foreground yellow-2)

(set-face-attribute 'font-lock-keyword-face nil
		    :foreground green-2)

(set-face-attribute 'font-lock-negation-char-face nil
		    :foreground red-0)

(set-face-attribute 'font-lock-preprocessor-face nil
		    :foreground purple-1)

(set-face-attribute 'font-lock-regexp-grouping-backslash nil
		    :weight 'bold
		    :foreground yellow-1)

(set-face-attribute 'font-lock-regexp-grouping-construct nil
		    :weight 'bold
		    :foreground purple-1)

(set-face-attribute 'font-lock-string-face nil
		    :foreground magenta-2)

(set-face-attribute 'font-lock-type-face nil
		    :foreground cyan-3)

(set-face-attribute 'font-lock-variable-name-face nil
		    :foreground orange-2)

(set-face-attribute 'font-lock-warning-face nil
		    :weight 'bold
		    :foreground red-2)

(set-face-attribute 'button nil
		    :inherit 'link)

(set-face-attribute 'link nil
		    :underline
		    '(:color foreground-color :style line)
		    :foreground blue-1)

(set-face-attribute 'link-visited nil
		    :underline
		    '(:color foreground-color :style line)
		    :foreground blue-2)

(set-face-attribute 'fringe nil 
		    :background black-4
		    :foreground black-1)

(set-face-attribute 'header-line nil
		    :foreground white-0
		    :background blue-3)

(set-face-attribute 'tooltip nil 
		    :foreground "lightyellow"
		    :background "black"
		    :inherit 'variable-pitch)

(set-face-attribute 'mode-line nil
		    :foreground blue-3
		    :background blue-0)

(set-face-attribute 'mode-line-buffer-id nil
		    :weight 'bold
		    :foreground black-5)

(set-face-attribute 'mode-line-emphasis nil
		    :weight 'bold)

(set-face-attribute 'mode-line-highlight nil
		    :box '(
			   :line-width 2
			   :color "grey40"
			   :style released-button)
		    :inherit 'highlight)

(set-face-attribute 'mode-line-inactive nil
		    :foreground white-1
		    :background black-2-5)

(set-face-attribute 'isearch nil
		    :foreground white-1
		    :background orange-3)

;; (set-face-attribute 'isearch-fail nil
;;   ((((class color) (min-colors 88) (background light))
;;     '(:background "RosyBrown1"))
;;    (((class color) (min-colors 88) (background dark))
;;     '(:background "red4"))
;;    (((class color) (min-colors 16))
;;     '(:background "red"))
;;    (((class color) (min-colors 8))
;;     '(:background "red"))
;;    (((class color grayscale))
;;     '(:foreground "grey"))
;;    (t '(:inverse-video t))))

(set-face-attribute 'lazy-highlight nil
		    :foreground white-1
		    :background magenta-3)

;; (set-face-attribute 'match nil
;;   ((((class color) (min-colors 88) (background light))
;;     :background "yellow1"))

;;    (((class color) (min-colors 88) (background dark))
;;     '(:background "RoyalBlue3"))

;;    (((class color) (min-colors 8) (background light))
;;     (
;;      :foreground "black"
;;      :background "yellow"))

;;    (((class color) (min-colors 8) (background dark))
;;     (
;;      :foreground "white"
;;      :background "blue"))

;;    (((type tty) (class mono))
;;     '(:inverse-video t))

;;    '(:background "gray")))

(set-face-attribute 'next-error nil
		    :inherit 'region)

(set-face-attribute 'query-replace nil
		    :inherit 'isearch)

(set-face-attribute 'linum nil
		    :stipple nil
		    :background black-4
		    :foreground black-1)

;; company
(set-face-attribute 'company-echo nil 
		    :background nil
		    :foreground white-1)

(set-face-attribute 'company-echo-common nil
		    :background black-3
		    :foreground red-1)

(set-face-attribute 'company-preview nil
		    :background black-5
		    :foreground magenta-2)

(set-face-attribute 'company-preview-common nil 
		    :background black-5
		    :foreground magenta-2)

(set-face-attribute 'company-preview-search nil
		    :background black-4
		    :foreground magenta-2
		    :weight 'bold)

(set-face-attribute 'company-scrollbar-bg nil
		    :background black-3)

(set-face-attribute 'company-scrollbar-fg nil
		    :background white-3)


(set-face-attribute 'company-template-field nil
		    :background yellow-00
		    :foreground black-4)

(set-face-attribute 'company-tooltip nil
		    :background black-3
		    :foreground blue-1)

(set-face-attribute 'company-tooltip-annotation nil 
		    :background black-4
		    :foreground red-1)

(set-face-attribute 'company-tooltip-common nil
		    :background black-2-5
		    :foreground blue-0)

(set-face-attribute 'company-tooltip-common-selection nil
		    :background blue-3
		    :foreground blue-0
		    :weight 'bold)

(set-face-attribute 'company-tooltip-mouse nil
		    :background green-0
		    :foreground black-5)

(set-face-attribute 'company-tooltip-selection nil
		    :background blue-3
		    :foreground blue-0)

;; popup

(set-face-attribute 'popup-face nil
		    :background black-3
		    :foreground blue-1)

(set-face-attribute 'popup-isearch-match nil
		    :background black-3
		    :foreground magenta-2
		    :weight 'bold)

(set-face-attribute 'popup-menu-face nil
		    :background black-3
		    :foreground blue-1)

(set-face-attribute 'popup-menu-mouse-face nil
		    :background green-0
		    :foreground black-4)

(set-face-attribute 'popup-menu-selection-face nil
		    :background blue-3
		    :foreground blue-0)

(set-face-attribute 'popup-menu-summary-face nil
		    :background black-3
		    :foreground blue-1)

(set-face-attribute 'popup-scroll-bar-background-face nil
		    :background black-3
		    :foreground black-3)

(set-face-attribute 'popup-scroll-bar-foreground-face nil
		    :background black-2
		    :foreground white-3)

(set-face-attribute 'popup-summary-face nil
		    :background black-3
		    :foreground blue-1)

(set-face-attribute 'popup-tip-face nil
		    :background black-2-5
		    :foreground white-1)


(set-face-attribute 'rainbow-delimiters-depth-1-face nil :foreground "#9a4040" :weight 'normal)
(set-face-attribute 'rainbow-delimiters-depth-2-face nil :foreground "#ff5e5e" :weight 'normal)
(set-face-attribute 'rainbow-delimiters-depth-3-face nil :foreground "#ffaa77" :weight 'normal)
(set-face-attribute 'rainbow-delimiters-depth-4-face nil :foreground "#dddd77" :weight 'normal)
(set-face-attribute 'rainbow-delimiters-depth-5-face nil :foreground "#80ee80" :weight 'normal)
(set-face-attribute 'rainbow-delimiters-depth-6-face nil :foreground "#66bbff" :weight 'normal)
(set-face-attribute 'rainbow-delimiters-depth-7-face nil :foreground "#da6bda" :weight 'normal)
(set-face-attribute 'rainbow-delimiters-depth-8-face nil :foreground "#afafaf" :weight 'normal)
(set-face-attribute 'rainbow-delimiters-depth-9-face nil :foreground "#f0f0f0" :weight 'normal)

(dotimes (i 9)
  (make-face (intern (concat "rainbow-indent-depth-"
			     (number-to-string (+ i 1))
			     "-face"))))

(setq highlight-indent-guides-character ?\x0020)

(let* ((char-width (frame-char-width (selected-frame)))
       (hl-stipple (if (> char-width 8)
		       (list char-width 4 (string 1 1 1 1 1 1 1 1))
		     (list char-width 4 (string 1 1 1 1)))))
  (set-face-attribute 'highlight-indent-guides-top-character-face nil
			:stipple hl-stipple
			:foreground "#afd7ff")
    (dotimes (i 9)
      (set-face-attribute
       (intern (concat "rainbow-indent-depth-"
		       (number-to-string (+ i 1))
		       "-face"))
       nil
       :inherit
       (intern (concat "rainbow-delimiters-depth-"
		       (number-to-string (+ i 1))
		       "-face"))
       :stipple hl-stipple)))

(provide-theme 'my-moe-dark)
